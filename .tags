!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
"	after/ftplugin/vim.vim	/^inoremap <buffer> <expr> " <SID>put_double_quotation()$/;"	m
+	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def +(other)$/;"	f	class:Parslet
<=>	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/position.rb	/^  def <=> b$/;"	f	class:Parslet
<SID>	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^nnoremap <SID>  <SID>$/;"	m
==	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def == other$/;"	f	class:Parslet
==	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/branchversion.rb	/^      def ==(other)$/;"	f	class:Vim.Flavor.BranchVersion
==	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/versionconstraint.rb	/^      def ==(other)$/;"	f	class:Vim.Flavor.VersionConstraint
>>	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^    def >> other_expr$/;"	f	class:Parslet.Expression
>>	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dsl.rb	/^  def >>(parslet)$/;"	f	class:Parslet
>>	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/sequence.rb	/^  def >>(parslet)$/;"	f	class:Parslet
A	.vim-flavor/deps/kana_vim-vspec/t/error-in-describe.t	/^  function A()$/;"	f
A	.vim-flavor/deps/kana_vim-vspec/t/error-in-it.t	/^    function A()$/;"	f
A	.vim-flavor/deps/kana_vim-vspec/t/error-in-source.t	/^function A()$/;"	f
A	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/transform_spec.rb	/^  class A < Struct.new(:elt); end$/;"	c
ALanguage	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/comments.rb	/^class ALanguage < Parslet::Parser$/;"	c
ALanguage	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/modularity.rb	/^module ALanguage$/;"	m
ALanguage	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^  class ALanguage < Parslet::Parser$/;"	c
Actions	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^  module Actions$/;"	m	class:Thor
Actions	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^  module Actions$/;"	m	class:Thor
Actions	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_link.rb	/^  module Actions$/;"	m	class:Thor
Actions	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/directory.rb	/^  module Actions$/;"	m	class:Thor
Actions	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^  module Actions$/;"	m	class:Thor
Actions	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^  module Actions$/;"	m	class:Thor
Actions	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/inject_into_file.rb	/^  module Actions$/;"	m	class:Thor
Alternative	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^  class Alternative$/;"	c	class:Parslet
Amazing	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/base_spec.rb	/^class Amazing$/;"	c
AmbiguousCommandError	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/error.rb	/^  class AmbiguousCommandError < Error$/;"	c	class:Thor
Application	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^  class Application$/;"	c	class:Parslet
Application	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/file_manipulation_spec.rb	/^class Application; end$/;"	c
Application	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/fixtures/application.rb	/^class Application < Base$/;"	c
Application	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/sandbox/application.rb	/^class Application < Base$/;"	c
Apply	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^  class Apply$/;"	c	class:Parslet
Argument	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/argument.rb	/^  class Argument #:nodoc:$/;"	c	class:Thor
ArgumentListParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^  class ArgumentListParser$/;"	c
Arguments	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^  class Arguments #:nodoc: # rubocop:disable ClassLength$/;"	c	class:Thor
B	.vim-flavor/deps/kana_vim-vspec/t/error-in-describe.t	/^  function B()$/;"	f
B	.vim-flavor/deps/kana_vim-vspec/t/error-in-it.t	/^    function B()$/;"	f
B	.vim-flavor/deps/kana_vim-vspec/t/error-in-source.t	/^function B()$/;"	f
B	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/transform_spec.rb	/^  class B < Struct.new(:elt); end$/;"	c
BLanguage	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/modularity.rb	/^class BLanguage < Parslet::Parser$/;"	c
BLanguage	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^  class BLanguage < Parslet::Parser$/;"	c
Bar	.vim-flavor/deps/kana_vim-vspec/t/throwpoint-representation.t	/^function Bar()$/;"	f
Base	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^  class Base$/;"	c	class:Parslet
Base	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^  module Base$/;"	m	class:Thor
Base	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell.rb	/^  module Base$/;"	m	class:Thor
Basic	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/basic.rb	/^    class Basic$/;"	c	class:Thor.LineEditor
Basic	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^    class Basic # rubocop:disable ClassLength$/;"	c	class:Thor.Shell
Baz	.vim-flavor/deps/kana_vim-vspec/t/throwpoint-representation.t	/^function Baz()$/;"	f
Bi	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/transform_spec.rb	/^  class Bi < Struct.new(:a, :b); end$/;"	c
Binding	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^  class Binding$/;"	c	class:Parslet
BlankSlate	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^class BlankSlate$/;"	c
BoringVendorProvidedCLI	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^class BoringVendorProvidedCLI < Thor$/;"	c
BranchVersion	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/branchversion.rb	/^    class BranchVersion$/;"	c	class:Vim.Flavor
C	.vim-flavor/deps/kana_vim-vspec/t/error-in-describe.t	/^  function C()$/;"	f
C	.vim-flavor/deps/kana_vim-vspec/t/error-in-it.t	/^    function C()$/;"	f
C	.vim-flavor/deps/kana_vim-vspec/t/error-in-source.t	/^function C()$/;"	f
C	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/transform_spec.rb	/^  class C < Struct.new(:elt); end$/;"	c
CLI	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^    class CLI < Thor$/;"	c	class:Vim.Flavor
CalcParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/calc.rb	/^class CalcParser < Parslet::Parser$/;"	c
CalcTransform	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/calc.rb	/^class CalcTransform < Parslet::Transform$/;"	c	class:op
Call	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! Call(...)  "{{{2$/;"	f
CanFlatten	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/can_flatten.rb	/^  module CanFlatten$/;"	m	class:Parslet
CapturingParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/capture.rb	/^class CapturingParser < Parslet::Parser$/;"	c
Cause	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^  class Cause$/;"	c	class:Parslet
Citrus	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^    class Citrus$/;"	c	class:Parslet.Visitors
ClassMethods	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  module ClassMethods$/;"	m	class:Parslet
ClassMethods	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    module ClassMethods$/;"	m	class:Thor.Actions
ClassMethods	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^    module ClassMethods$/;"	m	class:Thor
ClassMethods	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    module ClassMethods$/;"	m	class:Thor.Invocation
ClassOptionGroupPlugin	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^class ClassOptionGroupPlugin < Thor::Group$/;"	c
Color	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/color.rb	/^    class Color < Basic$/;"	c	class:Thor.Shell
Command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^  class Command < Struct.new(:name, :description, :long_description, :usage, :options)$/;"	c	class:Thor
CompatibleWith19Plugin	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^class CompatibleWith19Plugin < ClassOptionGroupPlugin$/;"	c
Context	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/context.rb	/^  class Context$/;"	c	class:Parslet
Contextual	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/contextual.rb	/^    class Contextual < Deepest$/;"	c	class:Parslet.ErrorReporter
CoreExt	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^  module CoreExt #:nodoc:$/;"	m	class:Thor
CoreExt	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^  module CoreExt #:nodoc:$/;"	m	class:Thor
CreateFile	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^    class CreateFile < EmptyDirectory #:nodoc:$/;"	c	class:Thor.Actions
CreateLink	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_link.rb	/^    class CreateLink < CreateFile #:nodoc:$/;"	c	class:Thor.Actions
Deepest	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/deepest.rb	/^    class Deepest$/;"	c	class:Parslet.ErrorReporter
DelayedMatchConstructor	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  class DelayedMatchConstructor$/;"	c	class:Parslet
Directory	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/directory.rb	/^    class Directory < EmptyDirectory #:nodoc:$/;"	c	class:Thor.Actions
Do	.vim-flavor/deps/kana_vim-vspec/t/no-hint.vim	/^function! Do(command)$/;"	f
DynamicCommand	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^  class DynamicCommand < Command$/;"	c
EmailParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/email_parser.rb	/^class EmailParser < Parslet::Parser$/;"	c
EmailSanitizer	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/email_parser.rb	/^class EmailSanitizer < Parslet::Transform$/;"	c
EmptyDirectory	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^    class EmptyDirectory #:nodoc:$/;"	c	class:Thor.Actions
Engine	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^  class Engine$/;"	c	class:Parslet
Entity	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^  class Entity$/;"	c	class:Parslet
Entry	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/json.rb	/^    class Entry < Struct.new(:key, :val); end$/;"	c	class:MyJson.Transformer
EnumerableExtension	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/enumerableextension.rb	/^    module EnumerableExtension$/;"	m	class:Vim.Flavor
Env	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/env.rb	/^    class Env$/;"	c	class:Vim.Flavor
ErbParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/erb.rb	/^class ErbParser < Parslet::Parser$/;"	c
ErbParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/optimized_erb.rb	/^class ErbParser < Parslet::Parser$/;"	c
Error	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/error.rb	/^  class Error < StandardError$/;"	c	class:Thor
ErrorReporter	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/contextual.rb	/^  module ErrorReporter$/;"	m	class:Parslet
ErrorReporter	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/deepest.rb	/^  module ErrorReporter$/;"	m	class:Parslet
ErrorReporter	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/tree.rb	/^  module ErrorReporter$/;"	m	class:Parslet
ExcitingPluginCLI	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^class ExcitingPluginCLI < Thor$/;"	c
Execute	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/fixtures/bundle/execute.rb	/^class Execute < Thor$/;"	c
Execute	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/sandbox/bundle/execute.rb	/^class Execute < Thor$/;"	c
Expect	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^command! -complete=expression -nargs=+ Expect$/;"	c
Expression	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^  class Expression$/;"	c	class:Parslet
Facade	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^    class Facade$/;"	c	class:Vim.Flavor
Fail	.vim-flavor/deps/kana_vim-vspec/t/exception-matchers.vim	/^function! Fail(s)$/;"	f
FakeUserEnvironment	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/features/support/env.rb	/^class FakeUserEnvironment$/;"	c
Fall	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/seasons.rb	/^class Fall < Parslet::Transform$/;"	c
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/branchversion.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/enumerableextension.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/env.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^    class Flavor$/;"	c	class:Vim.Flavor
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfileparser.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/plainversion.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/shellutility.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/version.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/versionconstraint.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/branchversion_spec.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/enumerableextension_spec.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/facade_spec.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/flavor_spec.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/flavorfile_spec.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/lockfile_spec.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/plainversion_spec.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/stringextension_spec.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/version_spec.rb	/^  module Flavor$/;"	m	class:Vim
Flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/versionconstraint_spec.rb	/^  module Flavor$/;"	m	class:Vim
FlavorFile	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^    class FlavorFile$/;"	c	class:Vim.Flavor
Foo	.vim-flavor/deps/kana_vim-vspec/t/throwpoint-representation.t	/^function Foo()$/;"	f
FooParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/convenience_spec.rb	/^  class FooParser < Parslet::Parser$/;"	c
FooParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/parser_spec.rb	/^  class FooParser < Parslet::Parser$/;"	c
GetVimVspecIndent	.vim-flavor/deps/kana_vim-vspec/after/indent/vim.vim	/^function GetVimVspecIndent(base_indent)$/;"	f
Graphable	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^  module Graphable$/;"	m	class:Parslet
GraphvizVisitor	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^  class GraphvizVisitor$/;"	c	class:Parslet
GroupPlugin	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^class GroupPlugin < Thor::Group$/;"	c
HTML	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/html.rb	/^    class HTML < Basic$/;"	c	class:Thor.Shell
HashWithIndifferentAccess	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^    class HashWithIndifferentAccess < ::Hash #:nodoc:$/;"	c	class:Thor.CoreExt
HiddenCommand	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^  class HiddenCommand < Command$/;"	c
HighlightingOf	.vim-flavor/deps/kana_vim-vspec/t/syntax.vim	/^function! HighlightingOf(file)$/;"	f
IO	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/io_binary_read.rb	/^class IO #:nodoc:$/;"	c
IPv4	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ip_address.rb	/^module IPv4$/;"	m
IPv6	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ip_address.rb	/^module IPv6 $/;"	m
IgnoreDSL	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ignore.rb	/^module IgnoreDSL$/;"	m
IgnoreParslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ignore.rb	/^class IgnoreParslet < Parslet::Atoms::Base$/;"	c
InfixExpressionParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/prec_calc.rb	/^class InfixExpressionParser < Parslet::Parser$/;"	c
InfixExpressionParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/infix_parser_spec.rb	/^  class InfixExpressionParser < Parslet::Parser$/;"	c
InfixInterpreter	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/prec_calc.rb	/^class InfixInterpreter < Parslet::Transform$/;"	c
InjectIntoFile	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/inject_into_file.rb	/^    class InjectIntoFile < EmptyDirectory #:nodoc:$/;"	c	class:Thor.Actions
IntLit	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/string_parser.rb	/^class IntLit < Lit$/;"	c
Invocation	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^  module Invocation$/;"	m	class:Thor
InvocationError	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/error.rb	/^  class InvocationError < Error$/;"	c	class:Thor
Kernel	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^module Kernel$/;"	m
LISP	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/parens.rb	/^module LISP # as in 'lots of insipid and stupid parenthesis'$/;"	m
Language	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/modularity.rb	/^class Language < Parslet::Parser$/;"	c
Like	.vim-flavor/deps/kana_vim-vspec/t/syntax.vim	/^function! Like(file)$/;"	f
LineCache	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source/line_cache.rb	/^  class LineCache $/;"	c	class:Parslet
LineEditor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor.rb	/^  module LineEditor$/;"	m	class:Thor
LineEditor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/basic.rb	/^  module LineEditor$/;"	m	class:Thor
LineEditor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^  module LineEditor$/;"	m	class:Thor
Lit	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/string_parser.rb	/^class Lit < Struct.new(:text)$/;"	c
LiteralsParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/string_parser.rb	/^class LiteralsParser < Parslet::Parser$/;"	c
LockFile	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^    class LockFile$/;"	c	class:Vim.Flavor
LockFileParser	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfileparser.rb	/^    class LockFileParser$/;"	c	class:Vim.Flavor
Lookahead	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^  class Lookahead$/;"	c	class:Parslet
MalformattedArgumentError	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/error.rb	/^  class MalformattedArgumentError < InvocationError$/;"	c	class:Thor
MiniLisp	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/minilisp.rb	/^module MiniLisp$/;"	m
MiniLisp	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/export_spec.rb	/^  class MiniLisp < Parslet::Parser$/;"	c
Module	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^class Module$/;"	c
MyJson	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/json.rb	/^module MyJson$/;"	m
MyParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/documentation.rb	/^class MyParser < Parslet::Parser$/;"	c
Named	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^  class Named$/;"	c	class:Parslet
NotFound	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^  class NotFound < StandardError$/;"	c	class:Parslet
Object	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^class Object$/;"	c
Object	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/spec/blankslate_spec.rb	/^      class Object$/;"	c
OneLinerExpectSyntax	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/spec_helper.rb	/^module OneLinerExpectSyntax$/;"	m
OptimusPrime	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/transform_spec.rb	/^    class OptimusPrime < Parslet::Transform $/;"	c
OptimusPrimeJunior	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/transform_spec.rb	/^      class OptimusPrimeJunior < OptimusPrime$/;"	c
Option	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^  class Option < Argument #:nodoc:$/;"	c	class:Thor
Options	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^  class Options < Arguments #:nodoc: # rubocop:disable ClassLength$/;"	c	class:Thor
OrderedHash	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^      class OrderedHash #:nodoc:$/;"	c	class:Thor.CoreExt
OrderedHash	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^      class OrderedHash < ::Hash$/;"	c	class:Thor.CoreExt
ParensParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^  class ParensParser < Parslet::Parser$/;"	c
ParseFailed	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  class ParseFailed < StandardError$/;"	c	class:Parslet
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/boolean_algebra.rb	/^class Parser < Parslet::Parser$/;"	c
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/deepest_errors.rb	/^class Parser < Parslet::Parser$/;"	c
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/empty.rb	/^class Parser < Parslet::Parser$/;"	c
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ip_address.rb	/^class Parser$/;"	c
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/json.rb	/^  class Parser < Parslet::Parser$/;"	c	class:MyJson
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/minilisp.rb	/^  class Parser < Parslet::Parser$/;"	c	class:MiniLisp
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/nested_errors.rb	/^class Parser < Parslet::Parser$/;"	c
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/parens.rb	/^  class Parser < Parslet::Parser$/;"	c	class:LISP
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/sentence.rb	/^class Parser < Parslet::Parser$/;"	c
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/expression/treetop.rb	/^  class Parser < Parslet::Parser$/;"	c	class:Parslet
Parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^  class Parser # reopen for introducing the .graph method$/;"	c	class:Parslet
Parser	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfileparser.rb	/^      class Parser < Parslet::Parser$/;"	c	class:Vim.Flavor.LockFileParser
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ignore.rb	/^class Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^module Parslet$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^module Parslet::Accelerator$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^module Parslet::Accelerator$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^module Parslet::Accelerator$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms.rb	/^module Parslet::Atoms$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/alternative.rb	/^class Parslet::Atoms::Alternative < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/base.rb	/^class Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/can_flatten.rb	/^module Parslet::Atoms$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/capture.rb	/^class Parslet::Atoms::Capture < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/context.rb	/^module Parslet::Atoms$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dsl.rb	/^module Parslet::Atoms::DSL$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dynamic.rb	/^class Parslet::Atoms::Dynamic < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/entity.rb	/^class Parslet::Atoms::Entity < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/infix.rb	/^class Parslet::Atoms::Infix < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/lookahead.rb	/^class Parslet::Atoms::Lookahead < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/named.rb	/^class Parslet::Atoms::Named < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/re.rb	/^class Parslet::Atoms::Re < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/repetition.rb	/^class Parslet::Atoms::Repetition < Parslet::Atoms::Base  $/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/scope.rb	/^class Parslet::Atoms::Scope < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/sequence.rb	/^class Parslet::Atoms::Sequence < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/str.rb	/^class Parslet::Atoms::Str < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^class Parslet::Parser$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^module Parslet::Atoms$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^module Parslet$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/context.rb	/^class Parslet::Context < BlankSlate$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/convenience.rb	/^class Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter.rb	/^module Parslet::ErrorReporter$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/contextual.rb	/^module Parslet$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/deepest.rb	/^module Parslet$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/tree.rb	/^module Parslet$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^class Parslet::Parser$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/expression.rb	/^class Parslet::Expression$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/expression/treetop.rb	/^class Parslet::Expression::Treetop$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^module Parslet$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/parser.rb	/^class Parslet::Parser < Parslet::Atoms::Base$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern.rb	/^class Parslet::Pattern  $/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern/binding.rb	/^class Parslet::Pattern::SequenceBind < Parslet::Pattern::SubtreeBind$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern/binding.rb	/^class Parslet::Pattern::SimpleBind < Parslet::Pattern::SubtreeBind$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern/binding.rb	/^class Parslet::Pattern::SubtreeBind < Struct.new(:symbol)$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/position.rb	/^class Parslet::Position$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^class Parslet::Scope$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^class Parslet::Slice$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^module Parslet$/;"	m
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source/line_cache.rb	/^class Parslet::Source$/;"	c
Parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^class Parslet::Transform$/;"	c
PathCompletion	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^      class PathCompletion$/;"	c	class:Thor.LineEditor.Readline
PlainVersion	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/plainversion.rb	/^    class PlainVersion < Gem::Version$/;"	c	class:Vim.Flavor
PluginWithDefault	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^class PluginWithDefault < Thor$/;"	c
PluginWithDefaultMultipleArguments	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^class PluginWithDefaultMultipleArguments < Thor$/;"	c
PluginWithDefaultcommandAndDeclaredArgument	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^class PluginWithDefaultcommandAndDeclaredArgument < Thor$/;"	c
Precedence	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms.rb	/^  module Precedence$/;"	m	class:Parslet
PrettyPrinter	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^  class PrettyPrinter$/;"	c	class:Parslet
RakeCompat	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/rake_compat.rb	/^  module RakeCompat$/;"	m	class:Thor
RakeTask	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/rake_compat_spec.rb	/^class RakeTask < Rake::TaskLib$/;"	c
RangeSearch	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source/line_cache.rb	/^  module RangeSearch $/;"	m	class:Parslet
Re	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^  class Re$/;"	c	class:Parslet
Readline	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^    class Readline < Basic$/;"	c	class:Thor.LineEditor
RecDefParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/atoms/entity_spec.rb	/^    class RecDefParser$/;"	c
Ref	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! Ref(...)  "{{{2$/;"	f
RepeatingBlockParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/unconsumed_input_spec.rb	/^  class RepeatingBlockParser < Parslet::Parser$/;"	c
Repetition	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^  class Repetition$/;"	c	class:Parslet
RepetitionParser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^  class RepetitionParser < Parslet::Parser$/;"	c
RequiredArgumentMissingError	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/error.rb	/^  class RequiredArgumentMissingError < InvocationError$/;"	c	class:Thor
ResetContext	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^command! -bar -nargs=0 ResetContext$/;"	c
SKIP	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^command! -nargs=+ SKIP$/;"	c
Sandbox	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^  module Sandbox #:nodoc:$/;"	m	class:Thor
SaveContext	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^command! -bar -nargs=0 SaveContext$/;"	c
Sequence	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^  class Sequence$/;"	c	class:Parslet
Set	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! Set(...)  "{{{2$/;"	f
Shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell.rb	/^  module Shell$/;"	m
Shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^  module Shell$/;"	m	class:Thor
Shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/color.rb	/^  module Shell$/;"	m	class:Thor
Shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/html.rb	/^  module Shell$/;"	m	class:Thor
ShellUtility	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/shellutility.rb	/^    module ShellUtility$/;"	m	class:Vim.Flavor
Source	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^  class Source$/;"	c	class:Parslet
Spring	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/seasons.rb	/^class Spring < Parslet::Transform$/;"	c
Str	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^  class Str$/;"	c	class:Parslet
String	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^class String$/;"	c
StringExtension	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^    module StringExtension$/;"	m	class:Vim.Flavor
StringLit	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/string_parser.rb	/^class StringLit < Lit$/;"	c
SubcommandWithDefault	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^class SubcommandWithDefault < Thor$/;"	c
Summer	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/seasons.rb	/^class Summer < Parslet::Transform$/;"	c
SuperSecretPlugin	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^class SuperSecretPlugin < Thor$/;"	c
Symbol	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^class Symbol$/;"	c
TODO	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^command! -bar -nargs=0 TODO$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^class Thor # rubocop:disable ClassLength$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_link.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/directory.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/inject_into_file.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/error.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^class Thor::Group # rubocop:disable ClassLength$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/basic.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/argument.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/rake_compat.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^class Thor::Runner < Thor #:nodoc: # rubocop:disable ClassLength$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/color.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/html.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/version.rb	/^class Thor$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/shell_spec.rb	/^      class Thor::Shell::TestShell < Thor::Shell::Basic; end$/;"	c
Thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/util_spec.rb	/^module Thor::Util$/;"	m
ThorTask	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/rake_compat_spec.rb	/^class ThorTask < Thor$/;"	c
Transform	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/minilisp.rb	/^  class Transform$/;"	c	class:MiniLisp
Transform	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/parens.rb	/^  class Transform < Parslet::Transform$/;"	c	class:LISP
Transform	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/expression/treetop.rb	/^  class Transform < Parslet::Transform$/;"	c	class:Parslet
Transformer	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/boolean_algebra.rb	/^class Transformer < Parslet::Transform$/;"	c
Transformer	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/json.rb	/^  class Transformer < Parslet::Transform$/;"	c	class:MyJson
Transformer	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/sentence.rb	/^class Transformer < Parslet::Transform$/;"	c
Transformer	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfileparser.rb	/^      class Transformer < Parslet::Transform$/;"	c	class:Vim.Flavor.LockFileParser
Tree	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/tree.rb	/^    class Tree$/;"	c	class:Parslet.ErrorReporter
Treetop	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^    class Treetop < Citrus$/;"	c	class:Parslet.Visitors
TwoCharLanguage	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^  class TwoCharLanguage < Parslet::Parser$/;"	c
UndefinedCommandError	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/error.rb	/^  class UndefinedCommandError < Error$/;"	c	class:Thor
UnicodeLanguage	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^  class UnicodeLanguage < Parslet::Parser$/;"	c
UnicodeSentenceLanguage	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^  class UnicodeSentenceLanguage < Parslet::Parser$/;"	c
UnknownArgumentError	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/error.rb	/^  class UnknownArgumentError < Error$/;"	c	class:Thor
Util	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^  module Util$/;"	m	class:Thor
Version	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/version.rb	/^    class Version$/;"	c	class:Vim.Flavor
VersionConstraint	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/versionconstraint.rb	/^    class VersionConstraint$/;"	c	class:Vim.Flavor
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/branchversion.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/enumerableextension.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/env.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfileparser.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/plainversion.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/shellutility.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/version.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/versionconstraint.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/branchversion_spec.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/enumerableextension_spec.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/facade_spec.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/flavor_spec.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/flavorfile_spec.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/lockfile_spec.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/plainversion_spec.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/stringextension_spec.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/version_spec.rb	/^module Vim$/;"	m
Vim	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/versionconstraint_spec.rb	/^module Vim$/;"	m
Visitors	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^  module Visitors$/;"	m	class:Parslet
Winter	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/seasons.rb	/^class Winter < Parslet::Transform$/;"	c
XML	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/simple_xml.rb	/^class XML < Parslet::Parser$/;"	c
[]	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^    def [](str)$/;"	f	class:Parslet.DelayedMatchConstructor
[]	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^    def [](k)$/;"	f	class:Parslet.Binding
[]	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^  def [](k)$/;"	f	class:Parslet
[]	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^      def [](key)$/;"	f	class:Thor.CoreExt.HashWithIndifferentAccess
[]	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^        def [](key)$/;"	f	class:Thor.CoreExt.OrderedHash
[]=	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^    def []=(k,v)$/;"	f	class:Parslet.Binding
[]=	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^  def []=(k,v)$/;"	f	class:Parslet
[]=	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^      def []=(key, value)$/;"	f	class:Thor.CoreExt.HashWithIndifferentAccess
[]=	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^        def []=(key, value)$/;"	f	class:Thor.CoreExt.OrderedHash
_blankslate_as_name	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^    def _blankslate_as_name$/;"	f	class:String
_blankslate_as_name	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^    def _blankslate_as_name$/;"	f	class:Symbol
_cleanup_options_and_set	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def _cleanup_options_and_set(options, key) #:nodoc:$/;"	f	class:Thor
_invoke_	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^          def _invoke_#{name.to_s.gsub(\/\\W\/, "_")}$/;"	f	class:Thor.invoke
_invoke_for_class_method	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^  def _invoke_for_class_method(klass, command = nil, *args, &block) #:nodoc:$/;"	f
_invoke_from_option_	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^          def _invoke_from_option_#{name.to_s.gsub(\/\\W\/, "_")}$/;"	f	class:Thor.invoke_from_option
_parse_initialization_options	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    def _parse_initialization_options(args, opts, config) #:nodoc:$/;"	f	class:Thor.Invocation
_retrieve_class_and_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    def _retrieve_class_and_command(name, sent_command = nil) #:nodoc:$/;"	f	class:Thor.Invocation
_shared_configuration	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def _shared_configuration #:nodoc:$/;"	f	class:Thor
_shared_configuration	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    def _shared_configuration #:nodoc:$/;"	f	class:Thor.Invocation
_shared_configuration	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell.rb	/^    def _shared_configuration #:nodoc:$/;"	f
abort	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/infix.rb	/^  def abort(error)$/;"	f
absent?	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^    def absent?$/;"	f	class:Parslet.Expression
absent?	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dsl.rb	/^  def absent?$/;"	f	class:Parslet
absolute_matches	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^        def absolute_matches$/;"	f	class:Thor.LineEditor.Readline.PathCompletion
accept	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^    def accept(visitor)$/;"	f	class:Parslet.Alternative
accept	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^    def accept(visitor)$/;"	f	class:Parslet.Base
accept	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^    def accept(visitor)$/;"	f	class:Parslet.Entity
accept	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^    def accept(visitor)$/;"	f	class:Parslet.Lookahead
accept	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^    def accept(visitor)$/;"	f	class:Parslet.Named
accept	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^    def accept(visitor)$/;"	f	class:Parslet.Re
accept	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^    def accept(visitor)$/;"	f	class:Parslet.Repetition
accept	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^    def accept(visitor)$/;"	f	class:Parslet.Sequence
accept	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^    def accept(visitor)$/;"	f	class:Parslet.Str
accept	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/visitor.rb	/^  def accept(visitor)$/;"	f	class:Parslet
action	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def action(instance) #:nodoc:$/;"	f	class:Thor
action	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/file_manipulation_spec.rb	/^  def action(*args, &block)$/;"	f
action	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions_spec.rb	/^  def action(*args, &block)$/;"	f
add_new_versions_to_repo	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/features/support/env.rb	/^  def add_new_versions_to_repo(basename, versions, flavorfile_content = nil)$/;"	f	class:FakeUserEnvironment
add_runtime_options!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^      def add_runtime_options!$/;"	f	class:Thor.Actions.ClassMethods
add_to_history?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^      def add_to_history?$/;"	f	class:Thor.LineEditor.Readline
after_each	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/enumerableextension.rb	/^      def after_each(&block)$/;"	f	class:Vim.Flavor.EnumerableExtension
all_commands	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def all_commands$/;"	f	class:Thor
animal	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def animal$/;"	f	class:CompatibleWith19Plugin
any	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def any$/;"	f	class:Parslet
any	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^  def any$/;"	f	class:Parslet
append_features	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^  def append_features(mod)$/;"	f	class:Module
append_prefix	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^    def append_prefix(stream, curved)$/;"	f	class:Parslet.Cause
append_to_file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def append_to_file(path, *args, &block)$/;"	f	class:Thor
apply	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^  def apply atom, *rules$/;"	f	class:Parslet
apply	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/base.rb	/^  def apply(source, context, consume_all=false)$/;"	f	class:Parslet.parse
apply	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/capture.rb	/^  def apply(source, context, consume_all)$/;"	f	class:Parslet
apply	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/named.rb	/^  def apply(source, context, consume_all)$/;"	f	class:Parslet
apply	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/scope.rb	/^  def apply(source, context, consume_all)$/;"	f	class:Parslet
apply	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^  def apply(obj, context=nil)$/;"	f
apply	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def apply(path, config = {})$/;"	f	class:Thor
are_matched	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:are_matched(value_actual, expr_matcher, value_expected)  "{{{2$/;"	f
argument	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def argument(name, options = {}) # rubocop:disable MethodLength$/;"	f	class:Thor.ClassMethods
argument	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/parser/argument_spec.rb	/^  def argument(name, options = {})$/;"	f
arguments	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def arguments$/;"	f	class:Thor
as	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^    def as name$/;"	f	class:Parslet.Expression
as	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dsl.rb	/^  def as(name)$/;"	f	class:Parslet
as_unicode	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^        def as_unicode$/;"	f	class:Thor.Shell.file_collision_help
ascii_tree	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^    def ascii_tree$/;"	f	class:Parslet.Cause
ask	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def ask(statement, *args)$/;"	f	class:Thor.Shell.Basic
ask	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/html.rb	/^      def ask(statement, color = nil)$/;"	f	class:Thor.Shell.HTML
ask_filtered	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def ask_filtered(statement, color, options)$/;"	f	class:Thor.Shell.file_collision_help
ask_simply	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def ask_simply(statement, color, options)$/;"	f	class:Thor.Shell.file_collision_help
attempt_parse	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/mathn.rb	/^def attempt_parse$/;"	f
attr_accessor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def attr_accessor(*) #:nodoc:$/;"	f	class:Thor.ClassMethods
attr_reader	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def attr_reader(*) #:nodoc:$/;"	f	class:Thor.ClassMethods
attr_writer	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def attr_writer(*) #:nodoc:$/;"	f	class:Thor.ClassMethods
available	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/basic.rb	/^      def self.available?$/;"	F	class:Thor.LineEditor.Basic
available	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^      def self.available?$/;"	F	class:Thor.LineEditor.Readline
b:custom_matchers	.vim-flavor/deps/kana_vim-vspec/t/custom-matchers.vim	/^    let b:custom_matchers = copy(Ref('s:custom_matchers'))$/;"	v
b:did_ftplugin_doorboy_ruby	after/ftplugin/ruby.vim	/^let b:did_ftplugin_doorboy_ruby = 1$/;"	v
b:did_ftplugin_doorboy_vim	after/ftplugin/vim.vim	/^let b:did_ftplugin_doorboy_vim = 1$/;"	v
banner	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def banner(command, namespace = nil, subcommand = false)$/;"	f	class:printable_commands
banner	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def banner$/;"	f
banner	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def self.banner(command, all = false, subcommand = false)$/;"	F
base	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/empty_directory_spec.rb	/^  def base$/;"	f
base_path	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^        def base_path$/;"	f	class:Thor.LineEditor.Readline.PathCompletion
baseclass	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def baseclass #:nodoc:$/;"	f	class:printable_commands
baseclass	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def baseclass #:nodoc:$/;"	f	class:Thor
baseclass	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def baseclass #:nodoc:$/;"	f
basename	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def basename$/;"	f	class:Thor
before_each	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/enumerableextension.rb	/^      def before_each(&block)$/;"	f	class:Vim.Flavor.EnumerableExtension
best_available	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor.rb	/^    def self.best_available$/;"	F	class:Thor.LineEditor
bind	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def bind var, val$/;"	f	class:Parslet.Engine
bind_type_name	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern/binding.rb	/^  def bind_type_name $/;"	f	class:Parslet
binread	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/io_binary_read.rb	/^    def binread(file, *args)$/;"	f	class:IO
bootstrap	.vim-flavor/deps/bootstrap.vim	/^            function! s:bootstrap()$/;"	f
bootstrap	.vim-flavor/deps/kana_vim-vspec/bin/vspec-bootstrap.vim	/^function! s:bootstrap(vspec_path)$/;"	f
boring	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def boring$/;"	f	class:BoringVendorProvidedCLI
boring	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/thor_spec.rb	/^      def boring(*args)$/;"	f
bound?	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def bound? var$/;"	f	class:Parslet.Engine
build_option	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def build_option(name, options, scope) #:nodoc:$/;"	f	class:Thor
build_options	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def build_options(options, scope) #:nodoc:$/;"	f	class:Thor
bytepos	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^    def bytepos$/;"	f	class:Parslet.Source
bytepos=	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^    def bytepos=(n)$/;"	f	class:Parslet.Source
cached?	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/base.rb	/^  def cached?$/;"	f	class:Parslet.parse
cached?	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dynamic.rb	/^  def cached?$/;"	f	class:Parslet
cached?	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/scope.rb	/^  def cached?$/;"	f	class:Parslet
cached?	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def cached?$/;"	f	class:Vim.Flavor.Flavor
cached_repo_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def cached_repo_path$/;"	f	class:Vim.Flavor.Flavor
cached_version?	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def cached_version?(version)$/;"	f	class:Vim.Flavor.Flavor
calculate	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/calc.rb	/^def calculate(str)$/;"	f	class:op
call	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/spec/blankslate_spec.rb	/^  def call(obj, meth, *args)$/;"	f
call	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/calc.rb	/^  def call(left)$/;"	f	class:op
call	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def call$/;"	f	class:Parslet.Application
call	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/atoms_spec.rb	/^    def call(val)$/;"	f
call_on_match	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^  def call_on_match(bindings, block)$/;"	f	class:apply
camel_case	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def camel_case(str)$/;"	f	class:Thor.Util
can_bind?	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern/binding.rb	/^  def can_bind?(subtree)$/;"	f	class:Parslet
can_display_colors?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def can_display_colors?$/;"	f	class:Thor.Shell
can_display_colors?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/color.rb	/^      def can_display_colors?$/;"	f	class:Thor.Shell.Color
can_display_colors?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/html.rb	/^      def can_display_colors?$/;"	f	class:Thor.Shell.HTML
can_has	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/command_spec.rb	/^        def can_has$/;"	f
capture	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dsl.rb	/^  def capture(name)$/;"	f	class:Parslet
capture	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def capture(*args, &block)$/;"	f	class:Thor
capture	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/helper.rb	/^  def capture(stream)$/;"	f
cases	.vim-flavor/deps/kana_vim-vspec/t/pretty-string.vim	/^    let cases = [$/;"	v
catch_error	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/infix.rb	/^  def catch_error$/;"	f
catch_failed_parse	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/spec_helper.rb	/^def catch_failed_parse$/;"	f
caught	.vim-flavor/deps/kana_vim-vspec/t/custom-matchers.vim	/^      let caught = !!0$/;"	v
caught	.vim-flavor/deps/kana_vim-vspec/t/custom-matchers.vim	/^      let caught = !0$/;"	v
caught	.vim-flavor/deps/kana_vim-vspec/t/custom-matchers.vim	/^    let caught = !!0$/;"	v
charpos	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/position.rb	/^  def charpos$/;"	f	class:Parslet
chars_left	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^    def chars_left$/;"	f	class:Parslet.Source
chars_until	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^    def chars_until str$/;"	f	class:Parslet.Source
check	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/simple_xml.rb	/^def check(xml)$/;"	f
check_for_extra_spaces	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/quality_spec.rb	/^  def check_for_extra_spaces(filename)$/;"	f
check_for_spec_defs_with_single_quotes	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/quality_spec.rb	/^  def check_for_spec_defs_with_single_quotes(filename)$/;"	f
check_for_tab_characters	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/quality_spec.rb	/^  def check_for_tab_characters(filename)$/;"	f
check_requirement!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def check_requirement!$/;"	f	class:Thor.Arguments
check_unknown!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def check_unknown!$/;"	f	class:Thor.Options.to_switches
check_unknown!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/parser/options_spec.rb	/^  def check_unknown!$/;"	f
check_unknown_options	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def check_unknown_options #:nodoc:$/;"	f	class:Thor.ClassMethods
check_unknown_options!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def check_unknown_options!(options = {})$/;"	f	class:printable_commands
check_unknown_options!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def check_unknown_options!$/;"	f	class:Thor.ClassMethods
check_unknown_options?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def check_unknown_options?(config) #:nodoc:$/;"	f	class:printable_commands
check_unknown_options?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def check_unknown_options?(config) #:nodoc:$/;"	f	class:Thor.ClassMethods
checkout	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def checkout()$/;"	f	class:Vim.Flavor.Flavor
children	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^    def children$/;"	f	class:Parslet.Cause
chmod	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def chmod(path, mode, config = {})$/;"	f	class:Thor
choose_a_flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def choose_a_flavor(nfg)$/;"	f	class:Vim.Flavor.Facade
class_option	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def class_option(name, options = {})$/;"	f	class:Thor
class_options	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def class_options(options = nil)$/;"	f	class:Thor
class_options_help	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def class_options_help(shell, groups = {}) #:nodoc:$/;"	f	class:Thor
class_options_help	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def class_options_help(shell, groups = {}) #:nodoc:$/;"	f	class:Thor
clear_user_home	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/util_spec.rb	/^  def self.clear_user_home!$/;"	F	class:Thor
clone	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def clone()$/;"	f	class:Vim.Flavor.Flavor
cmd_Expect	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:cmd_Expect(exprs, vals)  "{{{2$/;"	f
cmd_ResetContext	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:cmd_ResetContext()  "{{{2$/;"	f
cmd_SaveContext	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:cmd_SaveContext()  "{{{2$/;"	f
command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/command_spec.rb	/^  def command(options = {})$/;"	f
command_help	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def command_help(shell, command_name)$/;"	f
commands	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def commands$/;"	f	class:Thor
comment_lines	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def comment_lines(path, flag, *args)$/;"	f	class:Thor
common_options_to_deploy	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^      def self.common_options_to_deploy$/;"	F	class:Vim.Flavor.CLI
compatible?	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/versionconstraint.rb	/^      def compatible?(version)$/;"	f	class:Vim.Flavor.VersionConstraint
compile_specfile	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:compile_specfile(specfile_path, result_path)  "{{{2$/;"	f
complete	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def complete(current_flavor_table, locked_flavor_table, mode, groups)$/;"	f	class:Vim.Flavor.Facade
complete_a_flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def complete_a_flavor(nf, locked_flavor_table, mode, groups, level, requirer)$/;"	f	class:Vim.Flavor.Facade
complete_a_flavor_dependencies	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def complete_a_flavor_dependencies(nf, locked_flavor_table, mode, groups, level)$/;"	f	class:Vim.Flavor.Facade
complete_a_flavor_itself	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def complete_a_flavor_itself(nf, lf, mode, level, requirer)$/;"	f	class:Vim.Flavor.Facade
complete_flavors	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def complete_flavors(current_flavor_table, locked_flavor_table, mode, groups, level, requirer)$/;"	f	class:Vim.Flavor.Facade
completion_options	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^      def completion_options$/;"	f	class:Thor.LineEditor.Readline
completion_proc	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^      def completion_proc$/;"	f	class:Thor.LineEditor.Readline
concat	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def concat(string)$/;"	f	class:Thor
constraint	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/flavorfile_spec.rb	/^      def constraint(*args)$/;"	f	class:Vim.Flavor
consume	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^    def consume(n)$/;"	f	class:Parslet.Source
context	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/transform/context_spec.rb	/^  def context(*args)$/;"	f
convert_encoded_instructions	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^      def convert_encoded_instructions(filename)$/;"	f	class:Thor.Actions.EmptyDirectory
convert_key	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^      def convert_key(key)$/;"	f	class:Thor.CoreExt.HashWithIndifferentAccess
copy_file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def copy_file(source, *args, &block)$/;"	f	class:Thor.Actions
correct	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/plainversion.rb	/^      def self.correct?(tag_name)$/;"	F	class:Vim.Flavor.PlainVersion
correct	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/version.rb	/^      def self.correct?(*args)$/;"	F	class:Vim.Flavor.Version
create	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/parser/arguments_spec.rb	/^  def create(opts = {})$/;"	f
create	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/parser/options_spec.rb	/^  def create(opts, defaults = {}, stop_on_unknown = false)$/;"	f
create	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/version.rb	/^      def self.create(arg)$/;"	F	class:Vim.Flavor.Version
create_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def create_command(meth) #:nodoc:$/;"	f	class:printable_commands
create_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def create_command(meth) #:nodoc:$/;"	f	class:Thor
create_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def create_command(meth) #:nodoc:$/;"	f
create_file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^    def create_file(destination, *args, &block)$/;"	f	class:Thor.Actions
create_file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/create_file_spec.rb	/^  def create_file(destination = nil, config = {}, options = {})$/;"	f
create_link	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_link.rb	/^    def create_link(destination, *args, &block)$/;"	f	class:Thor.Actions
create_link	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/create_link_spec.rb	/^  def create_link(destination = nil, config = {}, options = {})$/;"	f
create_vim_script_for_bootstrap	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def create_vim_script_for_bootstrap(flavors_path)$/;"	f	class:Vim.Flavor.Facade
cs	.vim-flavor/deps/kana_vim-vspec/t/runtimepath.vim	/^    let cs = split(current_runtimepath, ',')$/;"	v
cslice	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/slice_spec.rb	/^  def cslice string, offset, cache=nil$/;"	f
cts	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/prec_calc.rb	/^  def cts atom$/;"	f	class:InfixExpressionParser
cts	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/infix_parser_spec.rb	/^    def cts atom$/;"	f	class:InfixExpressionParser
current_command_chain	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    def current_command_chain$/;"	f	class:Thor.Invocation
current_is_switch?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def current_is_switch?$/;"	f	class:Thor.Options.to_switches
current_is_switch_formatted?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def current_is_switch_formatted?$/;"	f	class:Thor.Options.to_switches
current_is_value?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def current_is_value?$/;"	f	class:Thor.Arguments
current_is_value?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def current_is_value?$/;"	f	class:Thor.Options.to_switches
current_runtimepath	.vim-flavor/deps/kana_vim-vspec/t/runtimepath.vim	/^    let current_runtimepath = &runtimepath$/;"	v
d1	.vim-flavor/deps/kana_vim-vspec/t/comparison-matchers.vim	/^    let d1 = {}$/;"	v
d2	.vim-flavor/deps/kana_vim-vspec/t/comparison-matchers.vim	/^    let d2 = {}$/;"	v
dasherize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^    def dasherize(str)$/;"	f
dasherized?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^    def dasherized?$/;"	f
deepest	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/deepest.rb	/^      def deepest(cause)$/;"	f	class:Parslet.ErrorReporter.Deepest
deepest_child	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/deepest.rb	/^      def deepest_child(cause, rank=0)$/;"	f	class:Parslet.ErrorReporter.Deepest
default	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def default$/;"	f	class:SubcommandWithDefault
default_banner	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/argument.rb	/^    def default_banner$/;"	f	class:Thor.Argument
default_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def default_command(meth = nil)$/;"	f	class:Thor
default_group	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^      def default_group$/;"	f	class:Vim.Flavor.FlavorFile
default_groups	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^      def default_groups$/;"	f	class:Vim.Flavor.FlavorFile
default_runtimepath	.vim-flavor/deps/kana_vim-vspec/t/runtimepath.vim	/^    let default_runtimepath = &runtimepath$/;"	v
default_vimfiles_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^        def default_vimfiles_path$/;"	f	class:Vim.Flavor.CLI
deferred	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^    def deferred(name, content)$/;"	f	class:Parslet.PrettyPrinter
define	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/rake_compat_spec.rb	/^  def define$/;"	f	class:RakeTask
define_bracket_map	autoload/doorboy.vim	/^function! s:define_bracket_map(a_pair_of_brackets)$/;"	f
define_quotation_map	autoload/doorboy.vim	/^function! s:define_quotation_map(quotation)$/;"	f
delete	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^      def delete(key)$/;"	f	class:Thor.CoreExt.HashWithIndifferentAccess
delete	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^        def delete(key)$/;"	f	class:Thor.CoreExt.OrderedHash
deploy	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def deploy(flavors_path)$/;"	f	class:Vim.Flavor.Flavor
deploy_flavors	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def deploy_flavors(flavors, flavors_path)$/;"	f	class:Vim.Flavor.Facade
desc	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def desc(usage, description, options = {})$/;"	f	class:Thor
desc	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def desc(description = nil)$/;"	f	class:Thor
destination=	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^      def destination=(destination)$/;"	f	class:Thor.Actions.EmptyDirectory
destination_root	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def destination_root$/;"	f	class:Thor
destination_root	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/helper.rb	/^  def destination_root$/;"	f
destination_root=	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def destination_root=(root)$/;"	f	class:Thor
di	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^    def di(s)$/;"	f
diff_lcs_loaded?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/color.rb	/^      def diff_lcs_loaded? #:nodoc:$/;"	f	class:Thor.Shell.Color
diff_lcs_loaded?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/html.rb	/^      def diff_lcs_loaded? #:nodoc:$/;"	f	class:Thor.Shell.HTML
directory	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/directory.rb	/^    def directory(source, *args, &block)$/;"	f	class:Thor.Actions
dispatch	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def dispatch(meth, given_args, given_opts, config) #:nodoc: # rubocop:disable MethodLength$/;"	f	class:printable_commands
dispatch	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def dispatch(command, given_args, given_opts, config) #:nodoc:$/;"	f	class:Thor
dispatch	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def dispatch(command, given_args, given_opts, config) #:nodoc:$/;"	f
display_commands	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def display_commands(namespace, list) #:nodoc:$/;"	f
display_klasses	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def display_klasses(with_modules = false, show_internal = false, klasses = Thor::Base.subclasses)$/;"	f
do	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/minilisp.rb	/^    def do(tree)$/;"	f	class:MiniLisp.Transform
do_seasons	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/seasons.rb	/^def do_seasons(tree)$/;"	f
doorboy#add_quotation	autoload/doorboy.vim	/^function! doorboy#add_quotation(quotation)$/;"	f
doorboy#disable_quotation	autoload/doorboy.vim	/^function! doorboy#disable_quotation(quotation)$/;"	f
doorboy#initialize	autoload/doorboy.vim	/^function! doorboy#initialize()$/;"	f
doorboy#map_backspace	autoload/doorboy.vim	/^function! doorboy#map_backspace()$/;"	f
doorboy#map_space	autoload/doorboy.vim	/^function! doorboy#map_space()$/;"	f
doorboy#mapping#backspace	autoload/doorboy/mapping.vim	/^function! doorboy#mapping#backspace()$/;"	f
doorboy#mapping#put_closing_bracket	autoload/doorboy/mapping.vim	/^function! doorboy#mapping#put_closing_bracket(closing_bracket)$/;"	f
doorboy#mapping#put_opening_bracket	autoload/doorboy/mapping.vim	/^function! doorboy#mapping#put_opening_bracket(opening_bracket, closing_bracket)$/;"	f
doorboy#mapping#put_quotation	autoload/doorboy/mapping.vim	/^function! doorboy#mapping#put_quotation(quotation)$/;"	f
doorboy#mapping#space	autoload/doorboy/mapping.vim	/^function! doorboy#mapping#space()$/;"	f
doorboy#var#get_brackets	autoload/doorboy/var.vim	/^function! doorboy#var#get_brackets()$/;"	f
doorboy#var#get_quotations	autoload/doorboy/var.vim	/^function! doorboy#var#get_quotations()$/;"	f
downwards	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def downwards child$/;"	f	class:Parslet.GraphvizVisitor
ds	.vim-flavor/deps/kana_vim-vspec/t/runtimepath.vim	/^    let ds = split(default_runtimepath, ',')$/;"	v
dynamic	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def dynamic(&block)$/;"	f	class:Parslet
dynamic_command_class	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def dynamic_command_class #:nodoc:$/;"	f	class:printable_commands
dynamic_width	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def dynamic_width$/;"	f	class:Thor.Shell.file_collision_help
dynamic_width_stty	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def dynamic_width_stty$/;"	f	class:Thor.Shell.file_collision_help
dynamic_width_tput	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def dynamic_width_tput$/;"	f	class:Thor.Shell.file_collision_help
each	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^        def each$/;"	f	class:Thor.CoreExt.OrderedHash
each	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/enumerableextension_spec.rb	/^          def e.each$/;"	F	class:Vim
echo?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/basic.rb	/^      def echo?$/;"	f	class:Thor.LineEditor.Basic
effective_mode	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def effective_mode(mode, repo_name)$/;"	f	class:Vim.Flavor.Facade
element_match	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern.rb	/^  def element_match(tree, exp, bindings) $/;"	f	class:Parslet
element_match_ary_single	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern.rb	/^  def element_match_ary_single(sequence, exp, bindings)$/;"	f	class:Parslet
element_match_binding	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern.rb	/^  def element_match_binding(tree, exp, bindings)$/;"	f	class:Parslet
element_match_hash	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern.rb	/^  def element_match_hash(tree, exp, bindings)$/;"	f	class:Parslet
empty?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^        def empty?$/;"	f	class:Thor.CoreExt.OrderedHash
empty_directory	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^    def empty_directory(destination, config = {})$/;"	f	class:Thor.Actions
empty_directory	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/empty_directory_spec.rb	/^  def empty_directory(destination, options = {})$/;"	f
epsilon	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/local.rb	/^def epsilon; any.absent? end $/;"	f
err	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/context.rb	/^    def err(*args)$/;"	f	class:Parslet.Context
err	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/contextual.rb	/^      def err(atom, source, message, children=nil)$/;"	f	class:Parslet.ErrorReporter.Contextual
err	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/deepest.rb	/^      def err(atom, source, message, children=nil)$/;"	f	class:Parslet.ErrorReporter.Deepest
err	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/tree.rb	/^      def err(atom, source, message, children=nil)$/;"	f	class:Parslet.ErrorReporter.Tree
err_at	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/context.rb	/^    def err_at(*args)$/;"	f	class:Parslet.Context
err_at	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/deepest.rb	/^      def err_at(atom, source, message, pos, children=nil)$/;"	f	class:Parslet.ErrorReporter.Deepest
err_at	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/tree.rb	/^      def err_at(atom, source, message, pos, children=nil)$/;"	f	class:Parslet.ErrorReporter.Tree
error	.vim-flavor/deps/kana_vim-vspec/bin/prove-vspec	/^error()$/;"	f
error	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def error(statement)$/;"	f	class:Thor.Shell
escape	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def escape str$/;"	f	class:Parslet.GraphvizVisitor
escape_globs	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def escape_globs(path)$/;"	f	class:Thor
eval	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/calc.rb	/^  def eval$/;"	f	class:op
eval	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/calc.rb	/^  def eval; self end$/;"	f
example	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/flavor_spec.rb	/^        def example tags, versions$/;"	f	class:Vim.Flavor
exec	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/thor_spec.rb	/^      def exec(*args)$/;"	f
execute!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/directory.rb	/^      def execute! # rubocop:disable MethodLength$/;"	f	class:Thor.Actions.Directory
exists?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_link.rb	/^      def exists?$/;"	f	class:Thor.Actions.CreateLink
exists?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^      def exists?$/;"	f	class:Thor.Actions.EmptyDirectory
exists_and_identical?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/directory_spec.rb	/^  def exists_and_identical?(source_path, destination_path)$/;"	f
exists_and_identical?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/file_manipulation_spec.rb	/^  def exists_and_identical?(source, destination)$/;"	f
exit_on_failure	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def self.exit_on_failure?$/;"	F
exit_on_failure	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^      def self.exit_on_failure?$/;"	F	class:Vim.Flavor.CLI
exit_on_failure?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def exit_on_failure?$/;"	f	class:Thor
exp	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def exp(str)$/;"	f	class:Parslet
expand	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/features/support/env.rb	/^  def expand(virtual_path)$/;"	f	class:FakeUserEnvironment.add_new_versions_to_repo
fake_cause	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/error_reporter/contextual_spec.rb	/^    def fake_cause(pos=13, children=nil)$/;"	f
fake_cause	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/error_reporter/deepest_spec.rb	/^    def fake_cause(pos=13, children=nil)$/;"	f
fetch	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def fetch()$/;"	f	class:Vim.Flavor.Flavor
file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/file_manipulation_spec.rb	/^      def file$/;"	f
file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/file_manipulation_spec.rb	/^    def file$/;"	f
file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/file_manipulation_spec.rb	/^  def file$/;"	f
file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/inject_into_file_spec.rb	/^  def file$/;"	f
file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions_spec.rb	/^  def file$/;"	f
file_collision	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def file_collision(destination) # rubocop:disable MethodLength$/;"	f	class:Thor.Shell
file_collision_help	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def file_collision_help #:nodoc:$/;"	f	class:Thor.Shell
file_level_lookup	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/directory.rb	/^        def file_level_lookup(previous_lookup)$/;"	f	class:Thor.Actions.Directory
files	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/directory.rb	/^        def files(lookup)$/;"	f	class:Thor.Actions.Directory
find_and_refresh_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def find_and_refresh_command(name) #:nodoc:$/;"	f	class:Thor
find_by_namespace	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def find_by_namespace(namespace)$/;"	f	class:Thor.Util
find_class_and_command_by_namespace	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def find_class_and_command_by_namespace(namespace, fallback = true)$/;"	f	class:Thor.Util
find_command_possibilities	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def find_command_possibilities(meth)$/;"	f	class:printable_commands
find_hidden_method	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^    def find_hidden_method(name)$/;"	f	class:BlankSlate
find_hidden_method	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^    def find_hidden_method(name)$/;"	f	class:Object
find_in_source_paths	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def find_in_source_paths(file) # rubocop:disable MethodLength$/;"	f	class:Thor
find_latest_version	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def find_latest_version(vs)$/;"	f	class:Vim.Flavor.Facade
find_mid	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source/line_cache.rb	/^    def find_mid(left, right)$/;"	f	class:Parslet.RangeSearch
find_the_best_version	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/versionconstraint.rb	/^      def find_the_best_version(versions)$/;"	f	class:Vim.Flavor.VersionConstraint
fireworks	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def fireworks$/;"	f	class:ExcitingPluginCLI
flatten	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/can_flatten.rb	/^    def flatten(value, named=false)$/;"	f	class:Parslet.CanFlatten
flatten_repetition	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/can_flatten.rb	/^    def flatten_repetition(list, named)$/;"	f	class:Parslet.CanFlatten
flatten_sequence	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/can_flatten.rb	/^    def flatten_sequence(list)$/;"	f	class:Parslet.CanFlatten
flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^      def flavor(repo_name, version_constraint=nil, group: nil, branch: nil)$/;"	f	class:Vim.Flavor.FlavorFile
flavor	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/lockfile_spec.rb	/^      def flavor(repo_name, locked_version)$/;"	f	class:Vim.Flavor
flavor_table	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^      def flavor_table$/;"	f	class:Vim.Flavor.FlavorFile
flavor_table	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^      def flavor_table$/;"	f	class:Vim.Flavor.LockFile
flavors	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^      def flavors$/;"	f	class:Vim.Flavor.LockFile
flavors=	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^      def flavors=(fs)$/;"	f	class:Vim.Flavor.LockFile
foldl	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/can_flatten.rb	/^    def foldl(list, &block)$/;"	f	class:Parslet.CanFlatten
foo	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/spec/blankslate_spec.rb	/^        def foo$/;"	f	class:Object
force_on_collision?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^      def force_on_collision?$/;"	f	class:Thor.Actions
force_or_skip_or_conflict	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^      def force_or_skip_or_conflict(force, skip, &block)$/;"	f	class:Thor.Actions
format	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^    def self.format(source, pos, str, children=[])$/;"	F	class:Parslet.Cause
formatted_usage	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def formatted_usage(klass, namespace = true, subcommand = false)$/;"	f	class:Thor.Command
from_superclass	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def from_superclass(method, default = nil)$/;"	f	class:Thor
g:DUMMY_SCOPE_CONTENT	.vim-flavor/deps/kana_vim-vspec/t/context.vim	/^let g:DUMMY_SCOPE_CONTENT = {'abc': 'ABC', 'def': 'DEF'}$/;"	v
g:counter	.vim-flavor/deps/kana_vim-vspec/t/after.vim	/^    let g:counter += 1$/;"	v
g:counter	.vim-flavor/deps/kana_vim-vspec/t/after.vim	/^  let g:counter = 0$/;"	v
g:counter	.vim-flavor/deps/kana_vim-vspec/t/before.vim	/^    let g:counter += 1$/;"	v
g:counter	.vim-flavor/deps/kana_vim-vspec/t/before.vim	/^  let g:counter = 0$/;"	v
g:counter	.vim-flavor/deps/kana_vim-vspec/t/multiple-it-with-the-same-description.vim	/^    let g:counter += 1$/;"	v
g:counter	.vim-flavor/deps/kana_vim-vspec/t/multiple-it-with-the-same-description.vim	/^    let g:counter += 10$/;"	v
g:counter	.vim-flavor/deps/kana_vim-vspec/t/multiple-it-with-the-same-description.vim	/^    let g:counter += 100$/;"	v
g:counter	.vim-flavor/deps/kana_vim-vspec/t/multiple-it-with-the-same-description.vim	/^let g:counter = 0$/;"	v
g:dummy_scope	.vim-flavor/deps/kana_vim-vspec/t/context.vim	/^    let g:dummy_scope['abc'] = 'aabbcc'  " Modify an existing variable.$/;"	v
g:dummy_scope	.vim-flavor/deps/kana_vim-vspec/t/context.vim	/^    let g:dummy_scope['abc'] = 'cba'$/;"	v
g:dummy_scope	.vim-flavor/deps/kana_vim-vspec/t/context.vim	/^    let g:dummy_scope['def'] = 'fed'$/;"	v
g:dummy_scope	.vim-flavor/deps/kana_vim-vspec/t/context.vim	/^    let g:dummy_scope['ghi'] = 'gghhii'  " Add a new variable.$/;"	v
g:dummy_scope	.vim-flavor/deps/kana_vim-vspec/t/context.vim	/^let g:dummy_scope = deepcopy(g:DUMMY_SCOPE_CONTENT)$/;"	v
g:loaded_doorboy	plugin/doorboy.vim	/^let g:loaded_doorboy = 1$/;"	v
g:stack	.vim-flavor/deps/kana_vim-vspec/t/nested-describe-basics.vim	/^let g:stack = []$/;"	v
g:the_reference_of_dummy_scope	.vim-flavor/deps/kana_vim-vspec/t/context.vim	/^let g:the_reference_of_dummy_scope = g:dummy_scope$/;"	v
generate_default_failure_message	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:generate_default_failure_message(i)  "{{{2$/;"	f
generate_failure_message	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:generate_failure_message(i)  "{{{2$/;"	f
get	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def get(source, *args, &block)$/;"	f	class:Thor.Actions
get_before_prev_and_after_next_chars	autoload/doorboy/mapping.vim	/^function! s:get_before_prev_and_after_next_chars()$/;"	f
get_hinted_scope	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:get_hinted_scope()  "{{{2$/;"	f
get_hinted_sid	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:get_hinted_sid()  "{{{2$/;"	f
get_input	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/basic.rb	/^      def get_input$/;"	f	class:Thor.LineEditor.Basic
get_left_str	autoload/doorboy/mapping.vim	/^function! s:get_left_str()$/;"	f
get_next_char	autoload/doorboy/mapping.vim	/^function! s:get_next_char()$/;"	f
get_options_from_invocations	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def get_options_from_invocations(group_options, base_options) #:nodoc: # rubocop:disable MethodLength$/;"	f	class:Thor
get_prev_and_next_chars	autoload/doorboy/mapping.vim	/^function! s:get_prev_and_next_chars()$/;"	f
get_prev_char	autoload/doorboy/mapping.vim	/^function! s:get_prev_char()$/;"	f
get_right_str	autoload/doorboy/mapping.vim	/^function! s:get_right_str()$/;"	f
github_repo_uri	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def self.github_repo_uri(user, repo)$/;"	F	class:Vim.Flavor.Flavor
github_uri_prefix	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/env.rb	/^        def github_uri_prefix$/;"	f	class:Vim.Flavor.Env
github_uri_suffix	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/env.rb	/^        def github_uri_suffix$/;"	f	class:Vim.Flavor.Env
glob_pattern	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^        def glob_pattern$/;"	f	class:Thor.LineEditor.Readline.PathCompletion
globs_for	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def globs_for(path)$/;"	f	class:Thor
graph	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def graph opts$/;"	f	class:Parslet.Graphable
group	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def group(name = nil)$/;"	f	class:Thor
group	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^      def group(group, &block)$/;"	f	class:Vim.Flavor.FlavorFile
gsub_file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def gsub_file(path, flag, *args, &block)$/;"	f	class:Thor
h16l	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ip_address.rb	/^  def h16l(times)$/;"	f	class:IPv6
h16r	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ip_address.rb	/^  def h16r(times)$/;"	f	class:IPv6
handle_argument_error	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def handle_argument_error(command, error, args, arity) #:nodoc:$/;"	f	class:Thor
handle_argument_error	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def handle_argument_error(command, error, args, arity) #:nodoc:$/;"	f
handle_argument_error?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def handle_argument_error?(instance, error, caller)$/;"	f
handle_no_command_error	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def handle_no_command_error(command, has_namespace = $thor_runner) #:nodoc:$/;"	f	class:Thor
handle_no_command_error	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/command_spec.rb	/^        def self.handle_no_command_error(name)$/;"	F
handle_no_method_error?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def handle_no_method_error?(instance, error, caller)$/;"	f
hash_examples	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/repetition_and_maybe_spec.rb	/^  def self.hash_examples(h)$/;"	F
hello	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/base_spec.rb	/^  def hello$/;"	f	class:Amazing
help	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^        def help(command = nil, subcommand = true); super; end$/;"	f	class:printable_commands.subcommand_help
help	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def help(shell, subcommand = false)$/;"	f
help	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^  def help(command = nil, subcommand = false)$/;"	f
help	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def help(shell)$/;"	f	class:Thor
help	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def help(meth = nil)$/;"	f	class:Thor
hi	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/group_spec.rb	/^        def hi$/;"	f
hi	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/thor_spec.rb	/^        def hi(name)$/;"	f
hidden?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def hidden?$/;"	f	class:HiddenCommand
hidden?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def hidden?$/;"	f	class:Thor.Command
hide	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^    def hide(name)$/;"	f	class:BlankSlate
home	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/env.rb	/^        def home$/;"	f	class:Vim.Flavor.Env
hooray	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def hooray$/;"	f	class:ExcitingPluginCLI
human_name	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^    def human_name$/;"	f	class:Thor
identical?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^      def identical?$/;"	f	class:Thor.Actions.CreateFile
identical?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_link.rb	/^      def identical?$/;"	f	class:Thor.Actions.CreateLink
ignore	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ignore.rb	/^  def ignore$/;"	f	class:IgnoreDSL
imap_unless_taken	autoload/doorboy.vim	/^function! s:imap_unless_taken(key, funcname)$/;"	f
in	.vim-flavor/deps/kana_vim-vspec/t/fixtures/invalid.vim	/^    not in a valid situation$/;"	m
in_regular_expression	autoload/doorboy/mapping.vim	/^function! s:in_regular_expression()$/;"	f
in_root	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def in_root$/;"	f	class:Thor
included	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def self.included(base)$/;"	F	class:Parslet
included	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def self.included(base) #:nodoc:$/;"	F	class:Thor.Actions
included	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def included(base) #:nodoc:$/;"	f	class:Thor.Base
included	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    def self.included(base) #:nodoc:$/;"	F	class:Thor.Invocation
included	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/rake_compat.rb	/^    def self.included(base)$/;"	F	class:Thor.RakeCompat
infix	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/prec_calc.rb	/^  def infix *args$/;"	f	class:InfixExpressionParser
infix	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/infix_parser_spec.rb	/^    def infix *args$/;"	f	class:InfixExpressionParser
infix_expression	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def infix_expression(element, *operations)$/;"	f	class:Parslet
inherited	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^    def inherited(subclass)$/;"	f	class:Parslet
inherited	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def inherited(klass)$/;"	f	class:Thor
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ignore.rb	/^  def initialize(parslet)$/;"	f	class:IgnoreParslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/minilisp.rb	/^    def initialize$/;"	f	class:MiniLisp.Transform
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/modularity.rb	/^  def initialize(c_language)$/;"	f	class:Language
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^    def initialize(message, cause=nil)$/;"	f	class:Parslet.ParseFailed
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^    def initialize(type, *args)$/;"	f	class:Parslet.Expression
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def initialize atom, rules$/;"	f	class:Parslet.Application
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def initialize $/;"	f	class:Parslet.Engine
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def initialize(engine, expr)$/;"	f	class:Parslet.Apply
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/alternative.rb	/^  def initialize(*alternatives)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/capture.rb	/^  def initialize(parslet, name)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/context.rb	/^    def initialize(reporter=Parslet::ErrorReporter::Tree.new)$/;"	f	class:Parslet.Context
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dynamic.rb	/^  def initialize(block)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/entity.rb	/^  def initialize(name, label=nil, &block)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/infix.rb	/^  def initialize(element, operations)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/lookahead.rb	/^  def initialize(bound_parslet, positive=true)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/named.rb	/^  def initialize(parslet, name)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/re.rb	/^  def initialize(match)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/repetition.rb	/^  def initialize(parslet, min, max, tag=:repetition)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/scope.rb	/^  def initialize(block)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/sequence.rb	/^  def initialize(*parslets)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/str.rb	/^  def initialize(str)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^    def initialize(message, source, pos, children)$/;"	f	class:Parslet.Cause
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/context.rb	/^  def initialize(bindings)$/;"	f
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/contextual.rb	/^      def initialize$/;"	f	class:Parslet.ErrorReporter.Contextual
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/deepest.rb	/^      def initialize$/;"	f	class:Parslet.ErrorReporter.Deepest
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def initialize(context)$/;"	f	class:Parslet.Visitors.Citrus
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^    def initialize(visitor_klass)$/;"	f	class:Parslet.PrettyPrinter
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/expression.rb	/^  def initialize(str, opts={}, context=self)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def initialize g$/;"	f	class:Parslet.GraphvizVisitor
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern.rb	/^  def initialize(pattern)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/position.rb	/^  def initialize string, bytepos$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^    def initialize(parent=nil)$/;"	f	class:Parslet.Binding
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^  def initialize$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def initialize(position, string, line_cache=nil)$/;"	f	class:Parslet
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^    def initialize(str)$/;"	f	class:Parslet.Source
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source/line_cache.rb	/^    def initialize$/;"	f	class:Parslet.LineCache
initialize	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^  def initialize(&block) $/;"	f
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def initialize(args = [], options = {}, config = {})$/;"	f	class:Thor.Actions
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^      def initialize(base, destination, data, config = {})$/;"	f	class:Thor.Actions.CreateFile
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/directory.rb	/^      def initialize(base, source, destination = nil, config = {}, &block)$/;"	f	class:Thor.Actions.Directory
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^      def initialize(base, destination, config = {})$/;"	f	class:Thor.Actions.EmptyDirectory
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/inject_into_file.rb	/^      def initialize(base, destination, data, config)$/;"	f	class:Thor.Actions.InjectIntoFile
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^    def initialize(args = [], local_options = {}, config = {}) # rubocop:disable MethodLength$/;"	f	class:Thor.Base
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def initialize(name, description, long_description, usage, options = nil)$/;"	f	class:Thor.Command
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def initialize(name, options = nil)$/;"	f	class:DynamicCommand
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^      def initialize(hash = {})$/;"	f	class:Thor.CoreExt.HashWithIndifferentAccess
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^        def initialize$/;"	f	class:Thor.CoreExt.OrderedHash
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    def initialize(args = [], options = {}, config = {}, &block) #:nodoc:$/;"	f	class:Thor.Invocation
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/basic.rb	/^      def initialize(prompt, options)$/;"	f	class:Thor.LineEditor.Basic
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^        def initialize(text)$/;"	f	class:Thor.LineEditor.Readline.PathCompletion
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/argument.rb	/^    def initialize(name, options = {})$/;"	f	class:Thor.Argument
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def initialize(arguments = [])$/;"	f	class:Thor.Arguments
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^    def initialize(name, options = {})$/;"	f	class:Thor.Option
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def initialize(hash_options = {}, defaults = {}, stop_on_unknown = false)$/;"	f	class:Thor.Options.to_switches
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell.rb	/^    def initialize(args = [], options = {}, config = {})$/;"	f	class:Shell
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def initialize #:nodoc:$/;"	f	class:Thor.Shell.Basic
initialize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/rake_compat_spec.rb	/^  def initialize$/;"	f	class:RakeTask
initialize	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/branchversion.rb	/^      def initialize(branch, revision)$/;"	f	class:Vim.Flavor.BranchVersion
initialize	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def initialize$/;"	f	class:Vim.Flavor.Facade
initialize	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^      def initialize(path)$/;"	f	class:Vim.Flavor.LockFile
initialize	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/plainversion.rb	/^      def initialize(tag_name)$/;"	f	class:Vim.Flavor.PlainVersion
initialize	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/versionconstraint.rb	/^      def initialize(s)$/;"	f	class:Vim.Flavor.VersionConstraint
initialize_added	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def initialize_added #:nodoc:$/;"	f	class:printable_commands
initialize_added	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def initialize_added #:nodoc:$/;"	f	class:Thor
initialize_copy	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def initialize_copy(other) #:nodoc:$/;"	f	class:Thor.Command
initialize_thorfiles	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def initialize_thorfiles(relevant_to = nil, skip_lookup = false)$/;"	f
inject	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/atoms/capture_spec.rb	/^  def inject string, parser$/;"	f
inject	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/atoms/scope_spec.rb	/^  def inject string, parser$/;"	f
inject_into_class	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def inject_into_class(path, klass, *args, &block)$/;"	f	class:Thor
insert_into_file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/inject_into_file.rb	/^    def insert_into_file(destination, *args, &block)$/;"	f	class:Thor.Actions
inside	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def inside(dir = "", config = {}, &block)$/;"	f	class:Thor
inspect	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/base.rb	/^  def inspect$/;"	f	class:Parslet.parse
inspect	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern/binding.rb	/^  def inspect$/;"	f	class:Parslet
inspect	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def inspect$/;"	f	class:Parslet.line_and_column
install	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def install(name) # rubocop:disable MethodLength$/;"	f	class:Thor
install	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^      def install$/;"	f	class:Vim.Flavor.CLI
install	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def install(vimfiles_path)$/;"	f	class:Vim.Flavor.Facade
install_or_update	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def install_or_update(mode, vimfiles_path)$/;"	f	class:Vim.Flavor.Facade
installed	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def installed$/;"	f
invocation_blocks	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def invocation_blocks #:nodoc:$/;"	f	class:Thor
invocations	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def invocations #:nodoc:$/;"	f	class:Thor
invoke	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def invoke(*names, &block) # rubocop:disable MethodLength$/;"	f	class:Thor
invoke	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    def invoke(name = nil, *args)$/;"	f	class:Thor.Invocation
invoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^      def invoke!$/;"	f	class:Thor.Actions
invoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_link.rb	/^      def invoke!$/;"	f	class:Thor.Actions.CreateLink
invoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/directory.rb	/^      def invoke!$/;"	f	class:Thor.Actions.Directory
invoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^      def invoke!$/;"	f	class:Thor.Actions.EmptyDirectory
invoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/inject_into_file.rb	/^      def invoke!$/;"	f	class:Thor.Actions
invoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/create_file_spec.rb	/^  def invoke!$/;"	f
invoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/create_link_spec.rb	/^  def invoke!$/;"	f
invoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/directory_spec.rb	/^  def invoke!(*args, &block)$/;"	f
invoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/empty_directory_spec.rb	/^  def invoke!$/;"	f
invoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/inject_into_file_spec.rb	/^  def invoke!(*args, &block)$/;"	f
invoke_all	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    def invoke_all #:nodoc:$/;"	f	class:Thor.Invocation
invoke_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    def invoke_command(command, *args) #:nodoc:$/;"	f	class:Thor.Invocation
invoke_from_option	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def invoke_from_option(*names, &block) # rubocop:disable MethodLength$/;"	f	class:Thor
invoke_with_conflict_check	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^      def invoke_with_conflict_check(&block)$/;"	f	class:Thor.Actions.EmptyDirectory
invoke_with_padding	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^    def invoke_with_padding(*args)$/;"	f	class:Thor.Invocation
invoker	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/directory_spec.rb	/^  def invoker$/;"	f
invoker	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/inject_into_file_spec.rb	/^  def invoker(options = {})$/;"	f
is?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def is?(value) #:nodoc:$/;"	f	class:Thor.Shell
is_beginning_of_line	after/ftplugin/vim.vim	/^function! s:is_beginning_of_line()$/;"	f
is_between_brackets	autoload/doorboy/mapping.vim	/^function! s:is_between_brackets()$/;"	f
is_between_brackets_with_spacing	autoload/doorboy/mapping.vim	/^function! s:is_between_brackets_with_spacing()$/;"	f
is_between_quoations	autoload/doorboy/mapping.vim	/^function! s:is_between_quoations()$/;"	f
is_closing_bracket	autoload/doorboy/mapping.vim	/^function! s:is_closing_bracket(char)$/;"	f
is_custom_matcher	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:is_custom_matcher(expr_matcher)  "{{{2$/;"	f
is_equality_matcher	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:is_equality_matcher(expr_matcher)  "{{{2$/;"	f
is_expected	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/spec_helper.rb	/^  def is_expected$/;"	f	class:OneLinerExpectSyntax
is_matcher	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:is_matcher(expr_matcher)  "{{{2$/;"	f
is_negative_matcher	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:is_negative_matcher(expr_matcher)  "{{{2$/;"	f
is_orderable_type	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:is_orderable_type(value)  "{{{2$/;"	f
is_ordering_matcher	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:is_ordering_matcher(expr_matcher)  "{{{2$/;"	f
is_present	autoload/doorboy/mapping.vim	/^function! s:is_present(char)$/;"	f
is_quotation	autoload/doorboy/mapping.vim	/^function! s:is_quotation(char)$/;"	f
is_regexp_matcher	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:is_regexp_matcher(expr_matcher)  "{{{2$/;"	f
is_succeeded	.vim-flavor/deps/kana_vim-vspec/t/expect.vim	/^      let is_succeeded = !!0$/;"	v
is_succeeded	.vim-flavor/deps/kana_vim-vspec/t/expect.vim	/^      let is_succeeded = !0$/;"	v
is_succeeded	.vim-flavor/deps/kana_vim-vspec/t/expect.vim	/^    let is_succeeded = !0$/;"	v
is_thor_reserved_word?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def is_thor_reserved_word?(word, type) #:nodoc:$/;"	f	class:Thor
join_or_new	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^    def join_or_new tag, other_expr$/;"	f	class:Parslet.Expression
keys	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^        def keys$/;"	f	class:Thor.CoreExt.OrderedHash
l	.vim-flavor/deps/kana_vim-vspec/t/tools.vim	/^    let l = []$/;"	v
l1	.vim-flavor/deps/kana_vim-vspec/t/comparison-matchers.vim	/^    let l1 = []$/;"	v
l2	.vim-flavor/deps/kana_vim-vspec/t/comparison-matchers.vim	/^    let l2 = []$/;"	v
last?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def last?$/;"	f	class:Thor.Arguments
lbound	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source/line_cache.rb	/^    def lbound(bound)$/;"	f	class:Parslet.RangeSearch
line_and_column	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def line_and_column$/;"	f	class:Parslet
line_and_column	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^    def line_and_column(position=nil)$/;"	f	class:Parslet.Source
line_and_column	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source/line_cache.rb	/^    def line_and_column(pos)$/;"	f	class:Parslet.LineCache
link_file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def link_file(source, *args, &block)$/;"	f	class:Thor.Actions
list	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def list(search = "")$/;"	f
list_tags	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def list_tags()$/;"	f	class:Vim.Flavor.Flavor
list_versions	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def list_versions()$/;"	f	class:Vim.Flavor.Flavor
load	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^      def load(flavorfile_path)$/;"	f	class:Vim.Flavor.FlavorFile
load	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^      def self.load(flavorfile_path)$/;"	F	class:Vim.Flavor.FlavorFile
load	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^      def load()$/;"	f	class:Vim.Flavor.LockFile
load_or_new	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavorfile.rb	/^      def self.load_or_new(flavorfile_path)$/;"	F	class:Vim.Flavor.FlavorFile
load_or_new	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^      def self.load_or_new(lockfile_path)$/;"	F	class:Vim.Flavor.LockFile
load_thorfile	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def load_thorfile(path, content = nil, debug = false)$/;"	f	class:Thor.Util
local_method?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def local_method?(instance, name)$/;"	f
long_desc	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def long_desc(long_description, options = {})$/;"	f	class:Thor
lookup	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def lookup var$/;"	f	class:Parslet.Engine
lookup	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/context.rb	/^    def lookup(obj, pos)$/;"	f	class:Parslet.Context
lookup_color	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def lookup_color(color)$/;"	f	class:Thor.Shell
ls	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/fixtures/bundle/execute.rb	/^  def ls$/;"	f	class:Execute
ls	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/sandbox/bundle/execute.rb	/^  def ls$/;"	f	class:Execute
make_branch_version	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def make_branch_version(branch)$/;"	f	class:Vim.Flavor.Flavor
make_cached_repo_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/features/support/env.rb	/^  def make_cached_repo_path(repo_name, stash_path)$/;"	f	class:FakeUserEnvironment.add_new_versions_to_repo
make_deployment_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def make_deployment_path(flavors_path)$/;"	f	class:Vim.Flavor.Flavor
make_flavor_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/features/support/env.rb	/^  def make_flavor_path(vimfiles_path, repo_name)$/;"	f	class:FakeUserEnvironment.add_new_versions_to_repo
make_repo_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/features/support/env.rb	/^  def make_repo_path(basename)$/;"	f	class:FakeUserEnvironment.add_new_versions_to_repo
make_repo_uri	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/features/support/env.rb	/^  def make_repo_uri(basename)$/;"	f	class:FakeUserEnvironment.add_new_versions_to_repo
mangle_name	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^    def mangle_name(str)$/;"	f	class:Parslet.PrettyPrinter
map	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def map(mappings = nil)$/;"	f	class:Thor
match	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def match(str=nil)$/;"	f	class:Parslet
match	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^  def match atom, expr$/;"	f	class:Parslet
match	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def match(atom, expr)$/;"	f	class:Parslet.Engine
match	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def match(type_tag)$/;"	f	class:Parslet.Apply
match	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern.rb	/^  def match(subtree, bindings=nil)$/;"	f	class:Parslet
match	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def match(regexp)$/;"	f	class:Parslet
match_operation	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/infix.rb	/^  def match_operation(source, context, consume_all)$/;"	f
matches	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^        def matches$/;"	f	class:Thor.LineEditor.Readline.PathCompletion
matches?	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^    def matches?(pattern)$/;"	f	class:Parslet.Source
maybe	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dsl.rb	/^  def maybe$/;"	f	class:Parslet
merge	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^      def merge(other)$/;"	f	class:Thor.CoreExt.HashWithIndifferentAccess
merge	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^        def merge(other)$/;"	f	class:Thor.CoreExt.OrderedHash
merge!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^      def merge!(other)$/;"	f	class:Thor.CoreExt.HashWithIndifferentAccess
merge_fold	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/can_flatten.rb	/^    def merge_fold(l, r)$/;"	f	class:Parslet.CanFlatten
meta_def	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/context.rb	/^  def meta_def(name, &body)$/;"	f	class:Parslet
method_added	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^    def method_added(name)$/;"	f	class:Kernel
method_added	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^    def method_added(name)$/;"	f	class:Object
method_added	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def method_added(meth)$/;"	f	class:Thor
method_missing	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^      def method_missing(method, *args, &block)$/;"	f	class:Thor.CoreExt.HashWithIndifferentAccess
method_missing	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def method_missing(meth, *args)$/;"	f	class:Thor
method_option	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def method_option(name, options = {})$/;"	f	class:Thor
method_options	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def method_options(options = nil)$/;"	f	class:Thor
mute	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def mute$/;"	f	class:Thor.Shell.Basic
mute?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def mute? # rubocop:disable TrivialAccessors$/;"	f	class:Thor.Shell.Basic
n	.vim-flavor/deps/kana_vim-vspec/t/runtimepath.vim	/^    let n = (len(cs) - (len(ds) - 2)) \/ 2$/;"	v
namespace	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def namespace(name = nil)$/;"	f	class:Thor
namespace	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/rake_compat.rb	/^  def namespace(name)$/;"	f
namespace_from_thor_class	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def namespace_from_thor_class(constant)$/;"	f	class:Thor.Util
namespaces_in_content	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def namespaces_in_content(contents, file = __FILE__)$/;"	f	class:Thor.Util
no?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def no?(statement, color = nil)$/;"	f	class:Thor.Shell.Basic
no_commands	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def no_commands$/;"	f	class:Thor
no_or_skip?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def no_or_skip?(arg)$/;"	f	class:Thor.Arguments
node	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def node name, opts={}$/;"	f	class:Parslet.GraphvizVisitor
normalize_command_name	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def normalize_command_name(meth) #:nodoc:$/;"	f	class:printable_commands
normalize_switch	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def normalize_switch(arg)$/;"	f	class:Thor.Options.to_switches
normalize_tag_name	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/plainversion.rb	/^      def self.normalize_tag_name(tag_name)$/;"	F	class:Vim.Flavor.PlainVersion
not_debugging?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def not_debugging?(instance)$/;"	f
not_parse	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/atoms_spec.rb	/^  def not_parse$/;"	f
offset	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def offset$/;"	f	class:Parslet
on_conflict_behavior	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^      def on_conflict_behavior(&block)$/;"	f	class:Thor.Actions
on_conflict_behavior	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^      def on_conflict_behavior(&block)$/;"	f	class:Thor.Actions.EmptyDirectory
on_failure	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/enumerableextension.rb	/^      def on_failure(&block)$/;"	f	class:Vim.Flavor.EnumerableExtension
op	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/calc.rb	/^  def op(operation, other)$/;"	f
option	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/parser/option_spec.rb	/^  def option(name, options = {})$/;"	f
original_value	.vim-flavor/deps/kana_vim-vspec/t/tools.vim	/^    let original_value = Ref('s:expr_hinted_sid')$/;"	v
output_diff_line	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/color.rb	/^      def output_diff_line(diff) #:nodoc:$/;"	f	class:Thor.Shell.Color
output_diff_line	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/html.rb	/^      def output_diff_line(diff) #:nodoc:$/;"	f	class:Thor.Shell.HTML
p	.vim-flavor/deps/kana_vim-vspec/t/runtimepath.vim	/^    let p = '\\v(^|\\,)\\.(\\\/|\\\\|\\,|$)'$/;"	v
p	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/pattern_spec.rb	/^  def p(pattern)$/;"	f
p	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/versionconstraint_spec.rb	/^        def p(*args)$/;"	f	class:Vim.Flavor
package_name	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def package_name(name, options = {})$/;"	f	class:Thor
padding=	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def padding=(value)$/;"	f	class:Thor.Shell.Basic
parse	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/documentation.rb	/^  def parse(str)$/;"	f	class:MyParser
parse	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ip_address.rb	/^  def parse(str)$/;"	f	class:Parser
parse	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/json.rb	/^  def self.parse(s)$/;"	F	class:MyJson
parse	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/base.rb	/^  def parse(io, options={})$/;"	f	class:Parslet
parse	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/expression.rb	/^  def parse(str)$/;"	f	class:Parslet
parse	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^    def parse(str)$/;"	f	class:ArgumentListParser
parse	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def parse(args)$/;"	f	class:Thor.Arguments
parse	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def self.parse(*args)$/;"	F	class:Thor.Arguments
parse	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^    def self.parse(key, value) # rubocop:disable MethodLength$/;"	F	class:Thor.Option
parse	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def parse(args) # rubocop:disable MethodLength$/;"	f	class:Thor.Options.to_switches
parse	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/parser/arguments_spec.rb	/^  def parse(*args)$/;"	f
parse	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/parser/option_spec.rb	/^  def parse(key, value)$/;"	f
parse	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/parser/options_spec.rb	/^  def parse(*args)$/;"	f
parse	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfileparser.rb	/^      def self.parse(s)$/;"	F	class:Vim.Flavor.LockFileParser
parse	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/versionconstraint.rb	/^      def self.parse(s)$/;"	F	class:Vim.Flavor.VersionConstraint
parse_array	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def parse_array(name)$/;"	f	class:Thor.Arguments
parse_boolean	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def parse_boolean(switch)$/;"	f	class:Thor.Options.to_switches
parse_hash	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def parse_hash(name)$/;"	f	class:Thor.Arguments
parse_numeric	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def parse_numeric(name)$/;"	f	class:Thor.Arguments
parse_peek	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def parse_peek(switch, option)$/;"	f	class:Thor.Options.to_switches
parse_should_arguments	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:parse_should_arguments(s, mode)  "{{{2$/;"	f
parse_string	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:parse_string(string_expression)  "{{{2$/;"	f
parse_string	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def parse_string(name)$/;"	f	class:Thor.Arguments
parse_with_debug	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/convenience.rb	/^  def parse_with_debug str, opts={}$/;"	f	class:Parslet
parsing_options?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def parsing_options?$/;"	f	class:Thor.Options.to_switches
parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/entity.rb	/^  def parslet$/;"	f	class:Parslet
part_one	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def part_one$/;"	f	class:GroupPlugin
part_two	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def part_two$/;"	f	class:GroupPlugin
peek	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def peek$/;"	f	class:Thor.Arguments
peek	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def peek$/;"	f	class:Thor.Options.to_switches
pop	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^  def pop$/;"	f	class:Parslet
pos	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source.rb	/^    def pos$/;"	f	class:Parslet.Source
precedence	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/base.rb	/^  def self.precedence(prec)$/;"	F	class:Parslet.parse
precedence_climb	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/infix.rb	/^  def precedence_climb(source, context, consume_all, current_prec=1, needs_element=false)$/;"	f
prepare_for_invocation	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/invocation.rb	/^      def prepare_for_invocation(key, name) #:nodoc:$/;"	f	class:Thor.Invocation.ClassMethods
prepare_message	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def prepare_message(message, *color)$/;"	f	class:Thor.Shell
prepend_to_file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def prepend_to_file(path, *args, &block)$/;"	f	class:Thor
present?	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^    def present?$/;"	f	class:Parslet.Expression
present?	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dsl.rb	/^  def present?$/;"	f	class:Parslet
pretend?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^      def pretend?$/;"	f	class:Thor.Actions.EmptyDirectory
prettify	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/deepest_errors.rb	/^def prettify(str)$/;"	f
prettify	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/nested_errors.rb	/^def prettify(str)$/;"	f
pretty_print	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^    def pretty_print(name, parslet)$/;"	f	class:Parslet.PrettyPrinter
print_in_columns	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def print_in_columns(array)$/;"	f	class:Thor.Shell.Basic
print_options	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def print_options(shell, options, group_name = nil)$/;"	f	class:Thor
print_table	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def print_table(array, options = {}) # rubocop:disable MethodLength$/;"	f	class:Thor.Shell.Basic
print_wrapped	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def print_wrapped(message, options = {})$/;"	f	class:Thor.Shell.Basic
printable_commands	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def printable_commands(all = true, subcommand = false)$/;"	f
printable_commands	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def printable_commands(*)$/;"	f
private_file_name	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/empty_directory_spec.rb	/^          def private_file_name$/;"	f
private_method?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def private_method?(instance)$/;"	f
produce_return_value	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/named.rb	/^  def produce_return_value(val)$/;"	f	class:Parslet
produce_tree	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/infix.rb	/^  def produce_tree(ary)$/;"	f	class:Parslet
product_path	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/examples_spec.rb	/^      def product_path(str, ext)$/;"	f
public_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def public_command(*names)$/;"	f	class:Thor
public_method?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def public_method?(instance) #:nodoc:$/;"	f
push	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/scope.rb	/^  def push$/;"	f	class:Parslet
put_double_quotation	after/ftplugin/vim.vim	/^function! s:put_double_quotation()$/;"	f
quiet?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def quiet? #:nodoc:$/;"	f	class:Thor.Shell.file_collision_help
r	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/source_spec.rb	/^    def r str$/;"	f
raise	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^    def raise(exception_klass=Parslet::ParseFailed)$/;"	f	class:Parslet.Cause
raise_not_implemented	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/entity.rb	/^  def raise_not_implemented$/;"	f	class:Parslet
rake_classes	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/rake_compat.rb	/^    def self.rake_classes$/;"	F	class:Thor.RakeCompat
re	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^  def re variable, *constraints$/;"	f	class:Parslet
readline	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor.rb	/^    def self.readline(prompt, options = {})$/;"	F	class:Thor.LineEditor
readline	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/basic.rb	/^      def readline$/;"	f	class:Thor.LineEditor.Basic
readline	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^      def readline$/;"	f	class:Thor.LineEditor.Readline
recurse	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def recurse node, current$/;"	f	class:Parslet.GraphvizVisitor
recurse_array	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^  def recurse_array(ary, ctx) $/;"	f	class:apply
recurse_hash	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^  def recurse_hash(hsh, ctx) $/;"	f	class:apply
recursive_ascii_tree	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^    def recursive_ascii_tree(node, stream, curved)$/;"	f	class:Parslet.Cause
reescape_string_content	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:reescape_string_content(s)$/;"	f
refresh_flavors	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def refresh_flavors(mode, flavorfile, lockfile, groups, flavors_path)$/;"	f	class:Vim.Flavor.Facade
register	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def register(klass, subcommand_name, usage, description, options = {})$/;"	f	class:Thor
register_klass_file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def register_klass_file(klass) #:nodoc:$/;"	f	class:Thor.Base
relative_matches	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^        def relative_matches$/;"	f	class:Thor.LineEditor.Readline.PathCompletion
relative_to_original_destination_root	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def relative_to_original_destination_root(path, remove_dot = true)$/;"	f	class:Thor
remaining	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def remaining # rubocop:disable TrivialAccessors$/;"	f	class:Thor.Arguments
remaining	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def remaining # rubocop:disable TrivialAccessors$/;"	f	class:Thor.Options.to_switches
remaining	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/parser/options_spec.rb	/^  def remaining$/;"	f
remove_argument	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def remove_argument(*names)$/;"	f	class:Thor
remove_class_option	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def remove_class_option(*names)$/;"	f	class:Thor
remove_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def remove_command(*names)$/;"	f	class:Thor
remove_file	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def remove_file(path, config = {})$/;"	f	class:Thor
remove_indent	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/acceptance/regression_spec.rb	/^    def remove_indent(s)$/;"	f
remove_invocation	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def remove_invocation(*names)$/;"	f	class:Thor
render	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/create_file.rb	/^      def render$/;"	f	class:Thor.Actions.CreateFile
repeat	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^    def repeat min=0, max=nil$/;"	f	class:Parslet.Expression
repeat	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dsl.rb	/^  def repeat(min=0, max=nil)$/;"	f	class:Parslet
replace!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/inject_into_file.rb	/^      def replace!(regexp, string, force)$/;"	f
repo_uri	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def repo_uri$/;"	f	class:Vim.Flavor.Flavor
required?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/argument.rb	/^    def required?$/;"	f	class:Thor.Argument
required_options	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def required_options$/;"	f
reset	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/contextual.rb	/^      def reset$/;"	f	class:Parslet.ErrorReporter.Contextual
result_of	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/calc.rb	/^  def self.result_of(str, int)$/;"	F
retrieve_command_name	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def retrieve_command_name(args) #:nodoc:$/;"	f	class:printable_commands
reveal	vendor/bundle/ruby/2.3.0/gems/blankslate-3.1.3/lib/blankslate.rb	/^    def reveal(name)$/;"	f	class:BlankSlate
revoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/directory.rb	/^      def revoke!$/;"	f	class:Thor.Actions.Directory
revoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^      def revoke!$/;"	f	class:Thor.Actions.EmptyDirectory
revoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/inject_into_file.rb	/^      def revoke!$/;"	f	class:Thor
revoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/create_file_spec.rb	/^  def revoke!$/;"	f
revoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/create_link_spec.rb	/^  def revoke!$/;"	f
revoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/directory_spec.rb	/^  def revoke!(*args, &block)$/;"	f
revoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/empty_directory_spec.rb	/^  def revoke!$/;"	f
revoke!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/inject_into_file_spec.rb	/^  def revoke!(*args, &block)$/;"	f
revoker	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/directory_spec.rb	/^  def revoker$/;"	f
revoker	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/inject_into_file_spec.rb	/^  def revoker$/;"	f
root	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/parser.rb	/^    def root(name)$/;"	f	class:Parslet
ruby_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def ruby_command # rubocop:disable MethodLength$/;"	f	class:Thor
rule	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^    def rule(name, opts={}, &definition)$/;"	f	class:Parslet.ClassMethods
rule	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^  def rule expression, &action$/;"	f	class:Parslet
rule	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^    def rule(name, parslet)$/;"	f	class:Parslet.PrettyPrinter
rule	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^    def rule(expression, &block)$/;"	f	class:Parslet
rule	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^  def rule(expression, &block)$/;"	f
rules	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^    def rules $/;"	f	class:Parslet
rules	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^  def rules $/;"	f	class:apply
run	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def run(command, config = {})$/;"	f	class:Thor
run	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def run(instance, args = [])$/;"	f	class:DynamicCommand
run	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def run(instance, args = [])$/;"	f	class:Thor.Command
run_ruby_script	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def run_ruby_script(command, config = {})$/;"	f	class:Thor
run_suites	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:run_suites(all_suites)$/;"	f
runner	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/file_manipulation_spec.rb	/^  def runner(options = {})$/;"	f
runner	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions_spec.rb	/^  def runner(options = {})$/;"	f
s:BACK	autoload/doorboy/mapping.vim	/^let s:BACK = "\\<LEFT>"$/;"	v
s:BRACKETS	autoload/doorboy.vim	/^let s:BRACKETS = doorboy#var#get_brackets()$/;"	v
s:BRACKETS	autoload/doorboy/mapping.vim	/^let s:BRACKETS = doorboy#var#get_brackets()$/;"	v
s:BRACKETS	autoload/doorboy/var.vim	/^let s:BRACKETS = ['()', '{}', '[]']$/;"	v
s:BS	autoload/doorboy/mapping.vim	/^let s:BS = "\\<BS>"$/;"	v
s:CLOSING_BRACKETS	autoload/doorboy/mapping.vim	/^let s:CLOSING_BRACKETS = map(deepcopy(s:BRACKETS), 'v:val[1]')$/;"	v
s:DEL	autoload/doorboy/mapping.vim	/^let s:DEL = "\\<DEL>"$/;"	v
s:FALSE	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:FALSE = 0$/;"	v
s:FALSE	autoload/doorboy/mapping.vim	/^let s:FALSE = 0$/;"	v
s:QUOTATIONS	autoload/doorboy.vim	/^let s:QUOTATIONS = doorboy#var#get_quotations()$/;"	v
s:QUOTATIONS	autoload/doorboy/mapping.vim	/^let s:QUOTATIONS = doorboy#var#get_quotations()$/;"	v
s:QUOTATIONS	autoload/doorboy/var.vim	/^let s:QUOTATIONS = ['"', "'", "`"]$/;"	v
s:RE_SPLIT_AT_MATCHER	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:RE_SPLIT_AT_MATCHER =$/;"	v
s:SKIP	autoload/doorboy/mapping.vim	/^let s:SKIP = "\\<RIGHT>"$/;"	v
s:SPACE	autoload/doorboy/mapping.vim	/^let s:SPACE = " "$/;"	v
s:TRUE	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:TRUE = !0$/;"	v
s:TRUE	autoload/doorboy/mapping.vim	/^let s:TRUE = !s:FALSE$/;"	v
s:VALID_MATCHERS	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:VALID_MATCHERS = (s:VALID_MATCHERS_EQUALITY$/;"	v
s:VALID_MATCHERS_EQUALITY	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:VALID_MATCHERS_EQUALITY = [$/;"	v
s:VALID_MATCHERS_ORDERING	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:VALID_MATCHERS_ORDERING = [$/;"	v
s:VALID_MATCHERS_REGEXP	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:VALID_MATCHERS_REGEXP = [$/;"	v
s:all_suites	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:all_suites = []  "{{{2$/;"	v
s:custom_matchers	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:custom_matchers = {}  "{{{2$/;"	v
s:expr_hinted_scope	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:expr_hinted_scope =$/;"	v
s:expr_hinted_sid	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:expr_hinted_sid =$/;"	v
s:save_cpo	plugin/doorboy.vim	/^let s:save_cpo = &cpo$/;"	v
s:saved_scope	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:saved_scope = {}  "{{{2$/;"	v
s:suite	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:suite = {}  "{{{2$/;"	v
s:symbol_table	.vim-flavor/deps/kana_vim-vspec/t/syntax.vim	/^let s:symbol_table = {$/;"	v
s:to_be_encoded_as	.vim-flavor/deps/kana_vim-vspec/t/pretty-string.vim	/^let s:to_be_encoded_as = {}$/;"	v
s:to_throw	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:to_throw = {}$/;"	v
s:to_throw	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^let s:to_throw.failure_message_for_should_not =$/;"	v
sans_backtrace	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/command.rb	/^    def sans_backtrace(backtrace, caller) #:nodoc:$/;"	f
satisfied_with?	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def satisfied_with?(version)$/;"	f	class:Vim.Flavor.Flavor
save	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^      def save()$/;"	f	class:Vim.Flavor.LockFile
save_yaml	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def save_yaml(yaml)$/;"	f
say	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def say(message = "", color = nil, force_new_line = (message.to_s !~ \/( |\\t)\\Z\/))$/;"	f	class:Thor.Shell.Basic
say	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def say$/;"	f	class:PluginWithDefaultcommandAndDeclaredArgument
say	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def say(*args)$/;"	f	class:PluginWithDefaultMultipleArguments
say	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def say(msg)$/;"	f	class:PluginWithDefault
say_status	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/empty_directory.rb	/^      def say_status(status, color)$/;"	f	class:Thor.Actions.EmptyDirectory
say_status	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/inject_into_file.rb	/^      def say_status(behavior)$/;"	f
say_status	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def say_status(status, message, log_status = true)$/;"	f	class:Thor.Shell.Basic
scan_for_line_endings	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/source/line_cache.rb	/^    def scan_for_line_endings(start_pos, buf)$/;"	f	class:Parslet.LineCache
scope	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def scope(&block)$/;"	f	class:Parslet
scope	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/context.rb	/^    def scope$/;"	f	class:Parslet.Context
self_command	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/group.rb	/^    def self_command #:nodoc:$/;"	f
sequence	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def sequence(symbol)$/;"	f	class:Parslet
serialize_lock_status	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^      def self.serialize_lock_status(flavor)$/;"	F	class:Vim.Flavor.LockFile
set	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/context.rb	/^    def set(obj, pos, val)$/;"	f	class:Parslet.Context
set_color	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def set_color(string, *args) #:nodoc:$/;"	f	class:Thor.Shell
set_color	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/color.rb	/^      def set_color(string, *colors)$/;"	f	class:Thor.Shell.Color
set_color	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/html.rb	/^      def set_color(string, *colors)$/;"	f	class:Thor.Shell.HTML
set_label	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^    def set_label(l)$/;"	f	class:Parslet.Cause
setup_and_apply	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/base.rb	/^  def setup_and_apply(source, error_reporter, consume_all)$/;"	f	class:Parslet.parse
sh	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/shellutility.rb	/^      def sh script$/;"	f	class:Vim.Flavor.ShellUtility
shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell.rb	/^      def shell$/;"	f	class:Thor.Base
shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell.rb	/^    def shell$/;"	f	class:Shell
shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/shell/basic_spec.rb	/^  def shell$/;"	f
shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/shell/color_spec.rb	/^  def shell$/;"	f
shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/shell/html_spec.rb	/^  def shell$/;"	f
shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/shell_spec.rb	/^  def shell$/;"	f
shell	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/thor_spec.rb	/^    def shell$/;"	f
shift	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def shift$/;"	f	class:Thor.Arguments
show_default?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/argument.rb	/^    def show_default?$/;"	f	class:Thor.Argument
show_diff	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def show_diff(destination, content) #:nodoc:$/;"	f	class:Thor.Shell.file_collision_help
show_diff	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/color.rb	/^      def show_diff(destination, content) #:nodoc:$/;"	f	class:Thor.Shell.Color
show_diff	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/html.rb	/^      def show_diff(destination, content) #:nodoc:$/;"	f	class:Thor.Shell.HTML
show_modules	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def show_modules #:nodoc:$/;"	f
silence!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/create_file_spec.rb	/^  def silence!$/;"	f
silence!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/actions/create_link_spec.rb	/^  def silence!$/;"	f
silence_warnings	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/helper.rb	/^  def silence_warnings$/;"	f
simple	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def simple(symbol)$/;"	f	class:Parslet
simplify_call_stack	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:simplify_call_stack(throwpoint, base_call_stack, type)  "{{{2$/;"	f
size	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def size$/;"	f	class:Parslet
slet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/spec_helper.rb	/^def slet name, &block$/;"	f
snake_case	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def snake_case(str)$/;"	f	class:Thor.Util
source_paths	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^      def source_paths$/;"	f	class:Thor.Actions.ClassMethods
source_paths	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def source_paths$/;"	f	class:Thor
source_paths_for_search	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^      def source_paths_for_search$/;"	f	class:Thor.Actions.ClassMethods
source_root	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^      def source_root(path = nil)$/;"	f	class:Thor.Actions.ClassMethods
source_root	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/helper.rb	/^  def source_root$/;"	f
spaced	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/expression/treetop.rb	/^    def spaced(str)$/;"	f	class:Parslet.Parser
spec_helper#append_chars	spec_helper.vim	/^function! spec_helper#append_chars(keys)$/;"	f
spec_helper#insert_bs	spec_helper.vim	/^function! spec_helper#insert_bs()$/;"	f
spec_helper#insert_chars	spec_helper.vim	/^function! spec_helper#insert_chars(keys)$/;"	f
spec_helper#put_with_cursor	spec_helper.vim	/^function! spec_helper#put_with_cursor(exp)$/;"	f
split	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def self.split(args)$/;"	F	class:Thor.Arguments
split_at_matcher	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:split_at_matcher(s)  "{{{2$/;"	f
squirrel	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def squirrel$/;"	f	class:SuperSecretPlugin
src	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/atoms_spec.rb	/^  def src(str); Parslet::Source.new str; end$/;"	f
start	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def start(given_args = ARGV, config = {})$/;"	f	class:Thor
stderr	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def stderr$/;"	f	class:Thor.Shell
stdout	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def stdout$/;"	f	class:Thor.Shell
stop_by_incompatible_declarations	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def stop_by_incompatible_declarations(nfg)$/;"	f	class:Vim.Flavor.Facade
stop_on_unknown_option	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def stop_on_unknown_option #:nodoc:$/;"	f	class:printable_commands
stop_on_unknown_option!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def stop_on_unknown_option!(*command_names)$/;"	f	class:printable_commands
stop_on_unknown_option?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def stop_on_unknown_option?(command) #:nodoc:$/;"	f	class:printable_commands
stop_on_unknown_option?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def stop_on_unknown_option?(command_name) #:nodoc:$/;"	f	class:Thor.ClassMethods
str	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def str(str)$/;"	f	class:Parslet
str	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^  def str variable, *constraints$/;"	f	class:Parslet
str	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/atoms/str_spec.rb	/^  def str(s)$/;"	f
strict_args_position	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def strict_args_position #:nodoc:$/;"	f	class:Thor.ClassMethods
strict_args_position!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def strict_args_position!$/;"	f	class:Thor.ClassMethods
strict_args_position?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def strict_args_position?(config) #:nodoc:$/;"	f	class:Thor.ClassMethods
subclass_files	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def subclass_files$/;"	f	class:Thor.Base
subclasses	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/base.rb	/^      def subclasses$/;"	f	class:Thor.Base
subcommand	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def subcommand(subcommand, subcommand_class)$/;"	f	class:printable_commands
subcommand_classes	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def subcommand_classes$/;"	f	class:printable_commands
subcommand_help	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def subcommand_help(cmd)$/;"	f	class:printable_commands
subcommands	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor.rb	/^    def subcommands$/;"	f	class:printable_commands
subtree	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet.rb	/^  def subtree(symbol)$/;"	f	class:Parslet
succ	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/base.rb	/^  def succ(result)$/;"	f	class:Parslet.parse
succ	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/context.rb	/^    def succ(*args)$/;"	f	class:Parslet.Context
succ	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/contextual.rb	/^      def succ(source)$/;"	f	class:Parslet.ErrorReporter.Contextual
succ	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/deepest.rb	/^      def succ(source)$/;"	f	class:Parslet.ErrorReporter.Deepest
succ	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/tree.rb	/^      def succ(source)$/;"	f	class:Parslet.ErrorReporter.Tree
suite.add_example	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:suite.add_example(example_description)  "{{{2$/;"	f
suite.after_block	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:suite.after_block()  "{{{2$/;"	f
suite.before_block	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:suite.before_block()  "{{{2$/;"	f
suite.generate_example_function_name	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:suite.generate_example_function_name(example_index)  "{{{2$/;"	f
suite.has_parent	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:suite.has_parent()  "{{{2$/;"	f
suite.run_after_blocks	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:suite.run_after_blocks()  "{{{2$/;"	f
suite.run_before_blocks	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:suite.run_before_blocks()  "{{{2$/;"	f
switch?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def switch?(arg)$/;"	f	class:Thor.Options.to_switches
switch_name	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^    def switch_name$/;"	f	class:Thor
switch_option	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def switch_option(arg)$/;"	f	class:Thor.Options.to_switches
syntax_at	.vim-flavor/deps/kana_vim-vspec/t/syntax.vim	/^function! s:syntax_at(lnum, col)$/;"	f
t	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/calc.rb	/^  def t(obj)$/;"	f
t	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/pattern_spec.rb	/^  def t(obj)$/;"	f
tag	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/simple_xml.rb	/^  def tag(opts={})$/;"	f	class:XML
task	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/rake_compat.rb	/^  def task(*)$/;"	f
template	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def template(source, *args, &block)$/;"	f	class:Thor
terminal_width	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def terminal_width$/;"	f	class:Thor.Shell
test	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^      def test(*files_or_dirs)$/;"	f	class:Vim.Flavor.CLI
test	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def test(files_or_dirs, options)$/;"	f	class:Vim.Flavor.Facade
this	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/local.rb	/^def this(name, &block); return Parslet::Atoms::Entity.new(name, &block) end$/;"	f
thor	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions.rb	/^    def thor(command, *args)$/;"	f	class:Thor
thor_classes_in	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def thor_classes_in(klass)$/;"	f	class:Thor.Util
thor_root	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def thor_root$/;"	f
thor_root	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def thor_root$/;"	f	class:Thor
thor_root_glob	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def thor_root_glob$/;"	f	class:Thor
thor_yaml	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def thor_yaml$/;"	f
thorfiles	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def thorfiles(relevant_to = nil, skip_lookup = false)$/;"	f
thorfiles_relevant_to	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def thorfiles_relevant_to(meth)$/;"	f
throw	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:throw(type, values)  "{{{2$/;"	f
to_be_empty	.vim-flavor/deps/kana_vim-vspec/t/custom-matchers.vim	/^    let to_be_empty = {}$/;"	v
to_be_empty.match	.vim-flavor/deps/kana_vim-vspec/t/custom-matchers.vim	/^    function! to_be_empty.match(actual)$/;"	f
to_be_encoded_as.failure_message_for_should	.vim-flavor/deps/kana_vim-vspec/t/pretty-string.vim	/^function! s:to_be_encoded_as.failure_message_for_should(value, representation)$/;"	f
to_be_encoded_as.match	.vim-flavor/deps/kana_vim-vspec/t/pretty-string.vim	/^function! s:to_be_encoded_as.match(value, representation)$/;"	f
to_bootstrap_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^      def to_bootstrap_path$/;"	f	class:Vim.Flavor.StringExtension
to_citrus	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^  def to_citrus$/;"	f	class:Parslet
to_deps_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^      def to_deps_path$/;"	f	class:Vim.Flavor.StringExtension
to_f	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def to_f$/;"	f	class:Parslet.line_and_column
to_flavorfile_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^      def to_flavorfile_path$/;"	f	class:Vim.Flavor.StringExtension
to_flavors_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^      def to_flavors_path$/;"	f	class:Vim.Flavor.StringExtension
to_hash	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^      def to_hash$/;"	f	class:Thor.CoreExt.HashWithIndifferentAccess
to_i	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/calc.rb	/^  def to_i$/;"	f	class:op
to_i	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def to_i$/;"	f	class:Parslet.line_and_column
to_int	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def to_int$/;"	f	class:Parslet.line_and_column
to_lockfile_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^      def to_lockfile_path$/;"	f	class:Vim.Flavor.StringExtension
to_map_key	autoload/doorboy.vim	/^function! s:to_map_key(char)$/;"	f
to_param	autoload/doorboy.vim	/^function! s:to_param(char)$/;"	f
to_parslet	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/expression.rb	/^  def to_parslet$/;"	f	class:Parslet
to_revision	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/branchversion.rb	/^      def to_revision()$/;"	f	class:Vim.Flavor.BranchVersion
to_revision	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/plainversion.rb	/^      def to_revision()$/;"	f	class:Vim.Flavor.PlainVersion
to_s	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/string_parser.rb	/^  def to_s$/;"	f	class:IntLit
to_s	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/string_parser.rb	/^  def to_s$/;"	f	class:Lit
to_s	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/base.rb	/^  def to_s(outer_prec=OUTER)$/;"	f	class:Parslet.parse
to_s	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/cause.rb	/^    def to_s$/;"	f	class:Parslet.Cause
to_s	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/branchversion.rb	/^      def to_s()$/;"	f	class:Vim.Flavor.BranchVersion
to_s	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/plainversion.rb	/^      def to_s()$/;"	f	class:Vim.Flavor.PlainVersion
to_s	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/versionconstraint.rb	/^      def to_s()$/;"	f	class:Vim.Flavor.VersionConstraint
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ignore.rb	/^  def to_s_inner(prec)$/;"	f	class:IgnoreParslet
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/alternative.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/capture.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dynamic.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/entity.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/infix.rb	/^  def to_s_inner(prec)$/;"	f
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/lookahead.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/named.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/re.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet.try
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/repetition.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet.initialize
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/scope.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/sequence.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/str.rb	/^  def to_s_inner(prec)$/;"	f	class:Parslet.try
to_s_inner	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/parser.rb	/^  def to_s_inner(prec)$/;"	f
to_slice	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def to_slice$/;"	f	class:Parslet.line_and_column
to_stash_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^      def to_stash_path$/;"	f	class:Vim.Flavor.StringExtension
to_str	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def to_str$/;"	f	class:Parslet.line_and_column
to_switches	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/options.rb	/^    def self.to_switches(options)$/;"	F	class:Thor.Options
to_sym	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/slice.rb	/^  def to_sym$/;"	f	class:Parslet.line_and_column
to_throw.failure_message_for_should	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:to_throw.failure_message_for_should(result, ...)$/;"	f
to_throw.match	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:to_throw.match(result, ...)$/;"	f
to_treetop	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^  def to_treetop$/;"	f	class:Parslet
to_vimfiles_path	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^      def to_vimfiles_path$/;"	f	class:Vim.Flavor.StringExtension
trace	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def trace message$/;"	f	class:Vim.Flavor.Facade
transform	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def transform atom$/;"	f	class:Parslet.Application
transform	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/expression.rb	/^  def transform(tree)$/;"	f	class:Parslet
transform_elt	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/transform.rb	/^  def transform_elt(elt, context) $/;"	f	class:apply
translate_script	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! s:translate_script(slines)  "{{{2$/;"	f
truncate	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def truncate(string, width)$/;"	f	class:Thor.Shell.file_collision_help
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/example/ignore.rb	/^  def try(source, context, consume_all)$/;"	f	class:IgnoreParslet
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/alternative.rb	/^  def try(source, context, consume_all)$/;"	f	class:Parslet
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/base.rb	/^  def try(source, context, consume_all)$/;"	f	class:Parslet.parse
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dynamic.rb	/^  def try(source, context, consume_all)$/;"	f	class:Parslet
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/entity.rb	/^  def try(source, context, consume_all)$/;"	f	class:Parslet
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/infix.rb	/^  def try(source, context, consume_all)$/;"	f	class:Parslet
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/lookahead.rb	/^  def try(source, context, consume_all)$/;"	f	class:Parslet
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/re.rb	/^  def try(source, context, consume_all)$/;"	f	class:Parslet
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/repetition.rb	/^  def try(source, context, consume_all)$/;"	f	class:Parslet.initialize
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/sequence.rb	/^  def try(source, context, consume_all)$/;"	f	class:Parslet
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/str.rb	/^  def try(source, context, consume_all)$/;"	f	class:Parslet
try	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/parser.rb	/^  def try(source, context, consume_all)$/;"	f
try_bind	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def try_bind(variable, value)$/;"	f	class:Parslet.Engine
try_with_cache	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/context.rb	/^    def try_with_cache(obj, source, consume_all)$/;"	f	class:Parslet.Context
uncomment_lines	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def uncomment_lines(path, flag, *args)$/;"	f	class:Thor
undasherize	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^    def undasherize(str)$/;"	f
uninstall	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def uninstall(name)$/;"	f
unix?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def unix?$/;"	f	class:Thor.Shell.file_collision_help
unknown	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/thor_spec.rb	/^        def unknown(*args)$/;"	f
unnamed	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/atoms/base_spec.rb	/^    def unnamed(obj)$/;"	f
unshift	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/arguments.rb	/^    def unshift(arg)$/;"	f	class:Thor.Arguments
unwrap	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/infix.rb	/^  def unwrap expr$/;"	f
update	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def update(name)$/;"	f
update	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^      def update(*repo_names)$/;"	f	class:Vim.Flavor.CLI
update	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/facade.rb	/^      def update(vimfiles_path, target_repo_names)$/;"	f	class:Vim.Flavor.Facade
update	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/lockfile.rb	/^      def update(completed_flavor_table)$/;"	f	class:Vim.Flavor.LockFile
update_label	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/error_reporter/contextual.rb	/^      def update_label(label, bytepos)$/;"	f	class:Parslet.ErrorReporter.Contextual
upgrade	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^      def upgrade(*repo_names)$/;"	f	class:Vim.Flavor.CLI
usage	.vim-flavor/deps/kana_vim-vspec/bin/prove-vspec	/^usage()$/;"	f
usage	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/argument.rb	/^    def usage$/;"	f	class:Thor.Argument
usage	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^    def usage(padding = 0)$/;"	f	class:Thor
use_appropriate_version	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def use_appropriate_version()$/;"	f	class:Vim.Flavor.Flavor
use_path_completion?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/line_editor/readline.rb	/^      def use_path_completion?$/;"	f	class:Thor.LineEditor.Readline
use_specific_version	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def use_specific_version(locked_version)$/;"	f	class:Vim.Flavor.Flavor
user_home	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/util.rb	/^      def user_home # rubocop:disable MethodLength$/;"	f	class:Thor.Util
v	.vim-flavor/deps/kana_vim-vspec/t/expect.vim	/^    let v = 'foo'$/;"	v
v	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/branchversion_spec.rb	/^      def v(*args)$/;"	f	class:Vim.Flavor
v	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/lockfile_spec.rb	/^      def v(s)$/;"	f	class:Vim.Flavor
v	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/versionconstraint_spec.rb	/^      def v(s)$/;"	f	class:Vim.Flavor
valid_type?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/argument.rb	/^    def valid_type?(type)$/;"	f	class:Thor.Argument
validate!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/argument.rb	/^    def validate!$/;"	f	class:Thor.Argument
validate!	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/parser/option.rb	/^    def validate!$/;"	f
values	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/ordered_hash.rb	/^        def values$/;"	f	class:Thor.CoreExt.OrderedHash
values_at	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/core_ext/hash_with_indifferent_access.rb	/^      def values_at(*indices)$/;"	f	class:Thor.CoreExt.HashWithIndifferentAccess
variable_name	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/pattern/binding.rb	/^  def variable_name$/;"	f	class:Parslet
variable_table	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/features/support/env.rb	/^  def variable_table$/;"	f	class:FakeUserEnvironment.add_new_versions_to_repo
version	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/runner.rb	/^  def version$/;"	f
version	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/cli.rb	/^      def version$/;"	f	class:Vim.Flavor.CLI
version	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/spec/flavor_spec.rb	/^        def version(s)$/;"	f	class:Vim.Flavor
versions_from_tags	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/flavor.rb	/^      def versions_from_tags(tags)$/;"	f	class:Vim.Flavor.Flavor
visit_alternative	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def visit_alternative(alternatives)$/;"	f	class:Parslet.Application
visit_alternative	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def visit_alternative(alternatives)$/;"	f	class:Parslet.Apply
visit_alternative	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def visit_alternative(alternatives)$/;"	f	class:Parslet.Visitors.Citrus
visit_alternative	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def visit_alternative(alternatives)$/;"	f	class:Parslet.Visitors.Treetop
visit_alternative	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def visit_alternative(alternatives)$/;"	f	class:Parslet.GraphvizVisitor
visit_entity	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def visit_entity(name, block)$/;"	f	class:Parslet.Application
visit_entity	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def visit_entity(name, block)$/;"	f	class:Parslet.Apply
visit_entity	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def visit_entity(name, block)$/;"	f	class:Parslet.Visitors.Citrus
visit_entity	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def visit_entity(name, block)$/;"	f	class:Parslet.GraphvizVisitor
visit_lookahead	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def visit_lookahead(positive, atom)$/;"	f	class:Parslet.Application
visit_lookahead	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def visit_lookahead(positive, atom)$/;"	f	class:Parslet.Apply
visit_lookahead	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def visit_lookahead(positive, bound_parslet)$/;"	f	class:Parslet.Visitors.Citrus
visit_lookahead	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def visit_lookahead(positive, atom)$/;"	f	class:Parslet.GraphvizVisitor
visit_named	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def visit_named(name, atom)$/;"	f	class:Parslet.Application
visit_named	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def visit_named(name, atom)$/;"	f	class:Parslet.Apply
visit_named	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def visit_named(name, parslet)$/;"	f	class:Parslet.Visitors.Citrus
visit_named	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def visit_named(name, atom)$/;"	f	class:Parslet.GraphvizVisitor
visit_parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def visit_parser(root)$/;"	f	class:Parslet.Application
visit_parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def visit_parser(root)$/;"	f	class:Parslet.Apply
visit_parser	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def visit_parser(root)$/;"	f	class:Parslet.GraphvizVisitor
visit_re	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def visit_re(regexp)$/;"	f	class:Parslet.Application
visit_re	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def visit_re(regexp)$/;"	f	class:Parslet.Apply
visit_re	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def visit_re(match)$/;"	f	class:Parslet.Visitors.Citrus
visit_re	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def visit_re(regexp)$/;"	f	class:Parslet.GraphvizVisitor
visit_repetition	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def visit_repetition(tag, min, max, atom)$/;"	f	class:Parslet.Application
visit_repetition	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def visit_repetition(tag, min, max, atom)$/;"	f	class:Parslet.Apply
visit_repetition	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def visit_repetition(tag, min, max, parslet)$/;"	f	class:Parslet.Visitors.Citrus
visit_repetition	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def visit_repetition(tag, min, max, parslet)$/;"	f	class:Parslet.Visitors.Treetop
visit_repetition	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def visit_repetition(tag, min, max, atom)$/;"	f	class:Parslet.GraphvizVisitor
visit_sequence	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def visit_sequence(sequence)$/;"	f	class:Parslet.Application
visit_sequence	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def visit_sequence(sequence)$/;"	f	class:Parslet.Apply
visit_sequence	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def visit_sequence(parslets)$/;"	f	class:Parslet.Visitors.Citrus
visit_sequence	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def visit_sequence(sequence)$/;"	f	class:Parslet.GraphvizVisitor
visit_str	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/application.rb	/^    def visit_str(str)$/;"	f	class:Parslet.Application
visit_str	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator/engine.rb	/^    def visit_str(str)$/;"	f	class:Parslet.Apply
visit_str	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/export.rb	/^      def visit_str(str)$/;"	f	class:Parslet.Visitors.Citrus
visit_str	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/graphviz.rb	/^    def visit_str(str)$/;"	f	class:Parslet.GraphvizVisitor
vspec#_matcher_false	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#_matcher_false(value)$/;"	f
vspec#_matcher_true	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#_matcher_true(value)$/;"	f
vspec#add_suite	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#add_suite(suite)  "{{{2$/;"	f
vspec#call	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#call(function_name, ...)  "{{{2$/;"	f
vspec#customize_matcher	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#customize_matcher(matcher_name, maybe_matcher)  "{{{2$/;"	f
vspec#hint	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#hint(info)  "{{{2$/;"	f
vspec#new_suite	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#new_suite(subject, parent_suite)  "{{{2$/;"	f
vspec#pretty_string	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#pretty_string(value)  "{{{2$/;"	f
vspec#ref	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#ref(variable_name)  "{{{2$/;"	f
vspec#scope	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#scope()  "{{{2$/;"	f
vspec#set	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#set(variable_name, value)  "{{{2$/;"	f
vspec#sid	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#sid()  "{{{2$/;"	f
vspec#test	.vim-flavor/deps/kana_vim-vspec/autoload/vspec.vim	/^function! vspec#test(specfile_path)  "{{{2$/;"	f
warn_about_duplicate_keys	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/can_flatten.rb	/^    def warn_about_duplicate_keys(h1, h2)$/;"	f	class:Parslet.CanFlatten
when_no_thorfiles_exist	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/runner_spec.rb	/^  def when_no_thorfiles_exist$/;"	f
with_args	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/spec/register_spec.rb	/^  def with_args(*args)$/;"	f	class:SubcommandWithDefault
with_match_locals	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/spec/parslet/pattern_spec.rb	/^  def with_match_locals(pattern, &block) $/;"	f
with_output_buffer	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/actions/file_manipulation.rb	/^    def with_output_buffer(buf = "") #:nodoc:$/;"	f	class:Thor
with_padding	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell.rb	/^    def with_padding$/;"	f
yes?	vendor/bundle/ruby/2.3.0/gems/thor-0.19.1/lib/thor/shell/basic.rb	/^      def yes?(statement, color = nil)$/;"	f	class:Thor.Shell.Basic
zap	vendor/bundle/ruby/2.3.0/gems/vim-flavor-2.2.1/lib/vim-flavor/stringextension.rb	/^      def zap$/;"	f	class:Vim.Flavor.StringExtension
|	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/accelerator.rb	/^    def | other_expr$/;"	f	class:Parslet.Expression
|	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/alternative.rb	/^  def |(parslet)$/;"	f	class:Parslet
|	vendor/bundle/ruby/2.3.0/gems/parslet-1.7.1/lib/parslet/atoms/dsl.rb	/^  def |(parslet)$/;"	f	class:Parslet
